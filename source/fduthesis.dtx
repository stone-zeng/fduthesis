% \iffalse meta-comment
% !TeX program  = XeLaTeX
% !TeX encoding = UTF-8
%
% Copyright (C) 2017 by Xiangdong Zeng <pssysrq@163.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Xiangdong Zeng.
%
% This work consists of the file fduthesis.dtx
%          and the derived files fduthesis.ins,
%                                fduthesis.cls,
%                                fduthesis-en.cls,
%                                fduthesis.def,
%                                fduthesis-user.def,
%                                fduthesis.pdf
%                            and README.md.
%
%<*internal>
\iffalse
%</internal>
%
%<*readme>
# fduthesis

[![Build Status](https://travis-ci.org/Stone-Zeng/fduthesis.svg?branch=master)](https://travis-ci.org/Stone-Zeng/fduthesis)
[![GitHub release](https://img.shields.io/github/release/Stone-Zeng/fduthesis/all.svg)](https://github.com/Stone-Zeng/fduthesis/releases/latest)

## 欢迎使用 fduthesis - 复旦大学论文模板！

在您使用 `fduthesis` 之前，请务必仔细阅读模板文档
[fduthesis.pdf](https://github.com/Stone-Zeng/fduthesis/releases/download/v0.3/fduthesis.pdf)。
该文档也可通过如下命令生成：

    latexmk fduthesis.dtx

若需要生成模板各部件，请执行如下命令：

    xetex fduthesis.dtx

### 模板组成

- `source/`             源代码
  - `fduthesis.dtx`       模板代码、注释以及文档
  - `ctxdoc-m.cls`        模板文档样式（修改自 `ctxdoc.cls`）
  - `.latexmkrc`           latexmk 配置文件

- `test/`               测试文件
  - `fduthesis.cls`       fduthesis 模板类
  - `fduthesis-en.cls`    fduthesis 模板类（英文版）
  - `fduthesis.def`       模板参数配置文件
  - `fduthesis-user.def`  用户配置文件
  - `test.tex`            测试论文
  - `test-en.tex`         测试论文（英文版）

- `support/`            Travis CI 支持文件
  - `texlive.sh`          安装最新版本 TeX Live
  - `texlive.profile`     TeX Live 环境变量配置
  - `local.sh`            安装本地宏包及相关字体
  - `run.sh`              执行测试命令

- `logo/`               复旦大学标识
  - `fudan-name.tex`      校名
  - `fudan-emblem.tex`    校徽
  - `fudan-motto.tex`     校训

- `.gitignore`          Git 忽略文件

- `.travis.yml`         Travis CI 配置文件

- `README.md`           自述文件（本文档）

### 许可证

本模板的发布遵守 [LaTeX Project Public License](http://www.latex-project.org/lppl.txt)
(版本 1.3c 或更高)。

<br></br>

## Welcome to fduthesis - LaTeX thesis template for Fudan University!

Before you using `fduthesis`, please read the document
[fduthesis.pdf](https://github.com/Stone-Zeng/fduthesis/releases/download/v0.3/fduthesis.pdf)
carefully. This file can be generated with the following commands
as well:

    latexmk fduthesis.dtx

If you want to get all components of `fduthesis`, please excute the
following commands:

    xetex fduthesis.dtx

### License

This work may be distributed and/or modified under the conditions of
the [LaTeX Project Public License](http://www.latex-project.org/lppl.txt),
either version 1.3c of this license or (at your option) any later
version.
%</readme>
%
%<*internal>
\fi
\begingroup
  \def\NameOfLaTeXe{LaTeX2e}
\expandafter\endgroup\ifx\NameOfLaTeXe\fmtname\else
\csname fi\endcsname
%</internal>
%
%<*install>
\input l3docstrip.tex
\keepsilent
\askforoverwritefalse

\preamble

    Copyright (C) 2017 by Xiangdong Zeng <pssysrq@163.com>

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. The latest version of this license is in:

      http://www.latex-project.org/lppl.txt

    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status `maintained'.

    The Current Maintainer of this work is Xiangdong Zeng.

    This work consists of the file fduthesis.dtx
             and the derived files fduthesis.ins,
                                   fduthesis.cls,
                                   fduthesis-en.cls,
                                   fduthesis.def,
                                   fduthesis-user.def,
                                   fduthesis.pdf
                               and README.md.

\endpreamble

\generate{
  \usedir{tex/latex/fduthesis}
  \file{\jobname.cls}       {\from{\jobname.dtx}{class}}
  \file{\jobname-en.cls}    {\from{\jobname.dtx}{class-en}}
  \file{\jobname.def}       {\from{\jobname.dtx}{definition}}
  \file{\jobname-user.def}  {\from{\jobname.dtx}{user}}
%</install>
%<*internal>
  \usedir{source/latex/fduthesis}
  \file{\jobname.ins}       {\from{\jobname.dtx}{install}}
%</internal>
%<*install>
  \nopreamble\nopostamble
  \usedir{doc/latex/fduthesis}
  \file{README.md}          {\from{\jobname.dtx}{readme}}
}

\obeyspaces
\Msg{*************************************************************}
\Msg{*                                                           *}
\Msg{* To finish the installation you have to move the following *}
\Msg{* files into a directory searched by TeX:                   *}
\Msg{*                                                           *}
\Msg{* The recommended directory is TDS:tex/latex/fduthesis      *}
\Msg{*                                                           *}
\Msg{*     fduthesis.cls                                         *}
\Msg{*     fduthesis-en.cls                                      *}
\Msg{*     fduthesis.def                                         *}
\Msg{*     fduthesis-user.def                                    *}
\Msg{*                                                           *}
\Msg{* To produce the documentation run the file fduthesis.dtx   *}
\Msg{* through XeLaTeX.                                          *}
\Msg{*                                                           *}
\Msg{* Happy TeXing!                                             *}
\Msg{*                                                           *}
\Msg{*************************************************************}

\endbatchfile
%</install>
%
%<*internal>
\fi
%</internal>
%
%<class|class-en>\NeedsTeXFormat{LaTeX2e}
%<class|class-en>\RequirePackage{expl3}
%<*!(driver|install)>
%<!readme>\GetIdInfo $Id: fduthesis.dtx 0.3 2017-07-28 12:00:00Z Xiangdong Zeng <pssysrq@163.com> $
%<class>  {Thesis template for Fudan University}
%<class-en>  {Thesis template for Fudan University (English version)}
%<definition>  {Definition file for fduthesis}
%<user>  {User definition file for fduthesis}
%<class|class-en>\ProvidesExplClass{\ExplFileName}
%<definition>\ProvidesExplFile{\ExplFileName.def}
%<user>\ProvidesExplFile{\ExplFileName-user.def}
%<!readme>  {\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
%</!(driver|install)>
%<*driver>
\documentclass{ctxdoc-m}
\usepackage{xpinyin}
\begin{document}
  % \DisableImplementation
  \DocInput{\jobname.dtx}
  \IndexLayout
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \changes{v0.1}{2017/02/15}{开始编写模板。}
% \changes{v0.2}{2017/02/19}{使用 Git 进行版本控制，并发布至 GitHub。}
% \changes{v0.3}{2017/02/21}{使用 \pkg{doc} 和 \pkg{DocStrip}。}
% \changes{v0.3}{2017/03/04}{支持 \LuaLaTeX{}。}
% \changes{v0.3}{2017/03/20}{添加测试文件。}
% \changes{v0.3}{2017/05/26}{使用 Travis CI 进行持续集成。}
% \changes{v0.3}{2017/06/23}{添加复旦大学标识。}
% \changes{v0.3}{2017/07/10}{添加英文模板。}
% \changes{v0.3}{2017/07/19}{使用 \pkg{l3docstrip} 管理名字空间。}
% \changes{v0.3}{2017/07/28}{整理代码，编写用户文档。}
%
% \CheckSum{0}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%^^A 禁止使用 " 符号作为抄录文本缩略符
% \DeleteShortVerb\"
%
% \title{\textcolor{MaterialIndigo800}{^^A
%   \textbf{fduthesis：复旦大学论文^^A
%     \xpinyin[font=\sffamily]{模}{mu2}板}}}
% \author{曾祥东}
% \date{\zhdate{2017/07/28} \quad v0.3^^A
%   \thanks{\url{https://github.com/Stone-Zeng/fduthesis}.}}
%
%^^A 封面与目录的页边距
% \newgeometry{
%   left   = 1.25 in,
%   right  = 1.25 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
% \maketitle
% \vfill
% \begin{center}
%   \includegraphics[width=8cm]{../logo/fduthesis-cover.pdf}
% \end{center}
% \vfill
% \thispagestyle{plain}
% \clearpage
%
% \tableofcontents
%
% \begin{documentation}
%
%^^A 用户手册的页边距
% \newgeometry{
%   left   = 1.75 in,
%   right  = 1.00 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
% \section{介绍}
% 目前，在网上可以找到的复旦大学 \LaTeX{} 论文模板主要有以下这些：
% \begin{itemize}
%   \item 数学科学学院 2001 级的何力同学和李湛同学在 2005 年根据
%     学校要求所设计的\cls{毕业论文格式 tex04 版}，以及 2008 年
%     张越同学修改之后的\cls{毕业论文格式 tex08 版}，这是专为
%     数院本科生撰写毕业论文而设计的
%     \scite{数院毕业论文格式,数院毕业论文格式更新}；
%   \item Pandoxie 编写的 \cls{FDU-Thesis-Latex}
%     \scite{pandoxie2014fduthesislatex}，基本满足了博士（硕士）
%     毕业论文格式要求，使用人数较多；
%   \item richarddzh 编写的硕士论文模板 \cls{fudan-thesis}
%     \scite{richard2016fudanthesis}；
%   \item hmshan 编写的博士论文模板 \cls{FDU_PhD_Thesis_Template}
%     \scite{hmshan2017fduphdthesistemplate}。
% \end{itemize}
% 以上这些模板大都没有经过系统的设计，也鲜有后续维护。相比之下，
% 清华大学 \scite{thuthesis}、重庆大学 \scite{cquthesis}、
% 中国科学技术大学 \scite{zepinglee2017ustcthesis} 以及友校
% 上海交通大学 \scite{weijianwen2017sjtuthesis}等，都有成熟、
% 稳定的解决方案，值得参考。
%
% 本模板将借鉴前辈经验，重新设计，并使用 \LaTeX3
% \scite{interfaces3,source3} 编写，以适应\TeX{} 技术发展潮流；
% 同时还将构建一套简洁的接口，方便用户使用。
%
% \subsection*{\LaTeX{} 入门}
% 本文档并非是一份 \LaTeX{} 零基础教程。如果您是完完全全的新手，
% 建议先阅读相关入门文档，如刘海洋编著的《\LaTeX{} 入门》
% \scite{刘海洋2013latex入门} 第一章，或大名鼎鼎的“\pkg{lshort}”
% \scite{lshort} 及其中文翻译版 \scite{lshort-zh-cn}。当然，
% 网络上的入门教程多如牛毛，您可以自行选取。
%
% \subsection*{关于本文档}
% 本文采用不同字体表示不同内容。无衬线字体表示宏包名称，如
% \pkg{xeCJK} 宏包、\pkg{fduthesis} 文档类等；等宽字体表示文件名，
% 如 \TeX{} 文档 \file{thesis.tex}、测试文件夹 \file{test} 等；
% 另一种等宽字体表示代码，如 |\fdusetup| 命令、|abstract| 环境等；
% 带有尖括号的楷体（或西文斜体）表示命令参数，如 \meta{模板选项}、
% \meta{English title} 等。在使用时，参数两侧的尖括号不必输入。
% 示例代码进行了语法高亮处理，以方便阅读。
%
% 在用户手册中，带有蓝色侧边线的为 \LaTeX{} 代码，而带有粉色侧边线
% 的则为命令行代码，请注意区分。模板提供的选项、命令、环境等，
% 均用横线框起，同时给出使用语法和相关说明。
%
% 本模板中的选项、命令或环境可以分为以下三类：
% \begin{itemize}
%   \item 名字后面带有 \rexptarget\rexpstar{} 的，表示只能在^^A
%     \emph{中文模板}中使用；
%   \item 名字后面带有 \exptarget\expstar{} 的，表示只能在^^A
%     \emph{英文模板}中使用；
%   \item 名字后面不带有特殊符号的，表示既可以在中文模板中使用，
%     也可以在英文模板中使用。
% \end{itemize}
%
% 代码实现主要面向对 \LaTeX{} 宏包开发感兴趣的用户。如果您有任何改进
% 意见或者功能需求，欢迎前往 GitHub 仓库
% \href{https://github.com/Stone-Zeng/fduthesis/issues}{提交 issue}。
%
% 文档的最后还提供了版本历史和代码索引，以供用户查阅。
%
% \section{安装}
% \subsection{获取 \cls{fduthesis}}
% 本模板目前暂未上传至 CTAN，您需要从 GitHub 上自行下载并安装。
% 具体方法如下：
% \begin{itemize}
%   \item 打开 \href{https://github.com/Stone-Zeng/fduthesis}{项目主页}，
%     点击“Clone or download”，并选择“Download ZIP”，下载
%     \file{fduthesis-master.zip}。
%   \item 解压 \file{fduthesis-master.zip} 后，将 \file{test}
%     文件夹下的模板文档类文件 \file{fduthesis.cls}、
%     \file{fduthesis-en.cls}，参数配置文件 \file{fduthesis.def}、
%     \file{fduthesis-user.def} 以及校名图片 \file{Fudan_Logo.pdf}
%     复制到您的工作文件夹（\TeX{}论文文件所在的文件夹）中，
%     方可完成安装。
% \end{itemize}
%
% 注：这是一条缓兵之计。
%
% \subsection{模板组成}
% 本模板主要包含核心文档类、配置文件、用户文档等几个部分，
% 其具体组成见表~\ref{tab:fduthesis-components}。
%
% \begin{table}[h]
%   \caption{\cls{fduthesis} 的组成} \label{tab:fduthesis-components}
%   \centering
%   \begin{tabular}{lp{24em}}
%     \toprule
%     \textbf{文件} & \textbf{功能说明} \\
%     \midrule
%     \file{fduthesis.cls}      & 中文模板文档类 \\
%     \file{fduthesis-en.cls}   & 英文模板文档类 \\
%     \file{fduthesis.def}      & 参数配置文件，用于设定 fduthesis
%       的初始参数，不建议您自行改动 \\
%     \file{fduthesis-user.def} & 用户配置文件，可根据您的需求进行
%       修改，默认为空 \\
%     \file{fduthesis.dtx}      & 模板源文件，包含源代码、注释以及
%       文档，同时集成有安装文件 \file{fduthesis.ins} \\
%     \file{README.md}          & 简要自述 \\
%     \file{fduthesis.pdf}      & 用户手册（本文档） \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% 模板中的绝大多数文件，均可由 \file{fduthesis.dtx} 导出。
% 在命令行中执行
% \begin{shellexample}
%   xetex fduthesis.dtx
% \end{shellexample}
% 可生成各导出文件；而要生成用户手册 \file{fduthesis.pdf}，则需执行
% \begin{shellexample}
%   xelatex fduthesis.dtx
%   makeindex -s gind.ist -o fduthesis.ind fduthesis.idx
%   makeindex -s gglo.ist -o fduthesis.gls -t fduthesis.glg fduthesis.glo
%   xelatex fduthesis.dtx
%   xelatex fduthesis.dtx
% \end{shellexample}
% 也可使用 \pkg{latexmk}：
% \begin{shellexample}
%   latexmk fduthesis.dtx
% \end{shellexample}
% 本模板已经为编译用户手册提供了 \pkg{latexmk} 配置文件
% \file{.latexmkrc}。
%
% \section{使用说明}
% \subsection{基本用法}
% 以下是一份简单的 \TeX{} 文档，它演示了 \cls{fduthesis} 的最基本用法：
% \begin{latexexample}
%   % thesis.tex
%   \documentclass{fduthesis}
%   \begin{document}
%     \chapter{您好}
%     \section{Welcome to fduthesis!}
%     你好，\LaTeX{}！
%   \end{document}
% \end{latexexample}
%
% 按照 \ref{subsec:编译方式}~小节中的方式编译该文档，您应当得到一篇
% 5 页的文章。当然，这篇文章的绝大部分都是空白的。
%
% 英文模板可以用类似的方式使用：
% \begin{latexexample}
%   % thesis-en.tex
%   \documentclass{fduthesis-en}
%   \begin{document}
%     \chapter{Hello}
%     \section{Welcome to fduthesis!}
%     Hello, \LaTeX{}!
%   \end{document}
% \end{latexexample}
% 英文模板只对正文部分进行了改动，封面、指导小组成员以及声明页仍将
% 显示为中文。
%
% \subsection{编译方式} \label{subsec:编译方式}
% 本模板不支持 \pdfTeX{} 引擎，请使用 \XeLaTeX{} 或 \LuaLaTeX{}
% 编译。推荐使用 \XeLaTeX{}。
% 为了生成正确的目录、脚注以及交叉引用，您至少需要连续编译两次。
%
% 以下代码中，假设您的 \TeX{} 论文文档名为 |thesis.tex|。
% 使用 \XeLaTeX{} 编译论文，请在命令行中执行
% \begin{shellexample}
%   xelatex thesis
%   xelatex thesis
% \end{shellexample}
% 或使用 \pkg{latexmk}：
% \begin{shellexample}
%   latexmk -xelatex thesis
% \end{shellexample}
%
% 使用 \LuaLaTeX{} 编译论文，请在命令行中执行
% \begin{shellexample}
%   lualatex thesis
%   lualatex thesis
% \end{shellexample}
% 或者
% \begin{shellexample}
%   latexmk -lualatex thesis
% \end{shellexample}
%
% 需要注意，请不要把模板中的配置文件 \file{.latexmkrc} 放置在工作
% 文件夹下。该配置文件仅适用于编译模板用户手册。
%
% \subsection{模板选项}
% 所谓“模板选项”，指需要在引入文档类的时候指定的选项：
% \begin{latexexample}
%   \documentclass(*\oarg{模板选项}*){fduthesis}
% \end{latexexample}
%
% 有些模板选项为布尔型，它们只能在 |true| 和 |false| 中取值。
% 对于这些选项，\meta{选项} |= true| 中的“|= true|”可以省略。
%
% \begin{function}{oneside,twoside}
%   指明论文的单双面模式，默认为 |twoside|。该选项会影响每章开头的
%   位置，还会影响页眉样式。
% \end{function}
%
% 在双面模式（|twoside|）下，按照通常的排版惯例，每章应只从奇数页
% （在右）开始；而在单页模式（|oneside|）下，则可以从任意页面开始。
% 本模板中，目录、摘要、符号表等均视作章，也按相同方式排版。
%
% 双面模式下，正文部分偶数页（在左）的左页眉显示章标题，奇数页
% （在右）的右页眉显示节标题；前置部分的页眉按同样格式显示，但文字
% 均为对应标题（如“{\CJKfamily{楷}目\textvisiblespace{}录}”、
% “{\CJKfamily{楷}摘\textvisiblespace{}要}”等）。
% 而在单面模式下，正文部分则页面不分奇偶，均同时显示左、右页眉，
% 文字分别为章标题和节标题；前置部分只有中间页眉，显示对应标题。
%
% \begin{function}{nofonts}
%   \begin{fdusyntax}
%     nofonts = (*<\TFF>*)
%   \end{fdusyntax}
%   选择是否禁用默认字体设置，默认关闭。
% \end{function}
%
% 禁用默认字体设置后，中文将无法正常显示，而西文则会按照 \LaTeX{}
% 的默认配置采用 Computer Modern 字体系列 \footnote{^^A
%   使用 \XeLaTeX{} 或 \LuaLaTeX{} 编译时，实际使用 Latin Modern
%   作为正文字体，数学字体仍使用 Computer Modern。本模板加载了
%   \pkg{unicode-math} 宏包，此时默认数学字体为 Latin Modern Math。}。
% 此时，您需要使用 \pkg{fontspec}、\pkg{xeCJK}、\pkg{unicode-math}
% 等宏包提供的 \cs{setmainfont}、\cs{setmainCJKfont}、
% \cs{setmathfont} 等命令来配置字体。
%
% \begin{function}{draft}
%   \begin{fdusyntax}
%     draft = (*<\TFF>*)
%   \end{fdusyntax}
%   选择是否开启草稿模式，默认关闭。
% \end{function}
%
% 草稿模式为全局选项，会影响到很多宏包的工作方式。
% 开启之后，主要的变化有：
% \begin{itemize}
%   \item 把行溢出的盒子显示为黑色方块；
%   \item 不实际插入图片，只输出一个占位方框；
%   \item 关闭超链接渲染，也不添加 PDF 书签（还未调用\pkg{hyperref}，
%     目前暂时不受影响）；
%   \item 显示页面边框。
% \end{itemize}
%
% \subsection{参数设置}
% 本模板提供了一系列选项，可由用户自行配置。以下所有选项均可通过
% 统一的命令 \cs{fdusetup} 来设置。
%
% \begin{function}{\fdusetup}
%   \begin{fdusyntax}
%     \fdusetup(*\marg{键值列表}*)
%   \end{fdusyntax}
%   这是本模板的通用控制命令，用来在载入文档类之后实现各种功能，
%   如修改论文格式、录入论文信息等。
% \end{function}
%
% \cs{fdusetup} 的参数是一组由（英文）逗号隔开的选项列表，列表中的
% 选项通常是 \meta{key} |=| \meta{value} 的形式。部分选项的
% \meta{value}可以省略。对于同一项，后面的设置将会覆盖前面的设置。
% 在下文的说明中，将用\textbf{粗体}表示默认值。
%
% \cs{fdusetup} 采用 \LaTeX3 风格的键值设置，支持不同类型以及多种
% 层次的选项设定。键值列表中，“|=|”左右的空格不影响设置；但需注意，
% 参数列表中不可以出现空行。
%
% 与模板选项相同，布尔型的参数可以省略 \meta{key} |= true| 中的
% “|= true|”。
%
% 另有一些选项包含子选项，如 |style| 和 |info| 等。它们可以按如下
% 两种等价方式来设定：
% \begin{latexexample}
%   \fdusetup{
%     style = {font = adobe, fontsize = -4},
%     info  = {
%       author     = {张三},
%       department = {物理系},
%       title      = {论如何使用 fduthesis 写好论文}
%     }
%   }
% \end{latexexample}
% 或者
% \begin{latexexample}
%   \fdusetup{
%     style / font       = adobe,
%     style / fontsize   = -4,
%     info  / author     = {张三},
%     info  / department = {物理系},
%     info  / title      = {论如何使用 fduthesis 写好论文}
%   }
% \end{latexexample}
%
% 在第二种方式中，“|/|” 与 “|=|” 类似，前后的空白对设置没有影响。
%
% \subsubsection{论文格式} \label{subsubsec:论文格式}
% \begin{function}{style}
%   \begin{fdusyntax}
%     style = (*\marg{键值列表}*)
%     style / (*\meta{key}*) = (*\meta{value}*)
%   \end{fdusyntax}
%   设置论文格式的通用选项，具体内容见下。
% \end{function}
%
% \begin{function}{style/font}
%   \begin{fdusyntax}
%     font = (*<libertinus|lm|palatino|(times)>*)
%   \end{fdusyntax}
%   设置西文字体（包括数学字体）。
% \end{function}
%
% \begin{function}[rEXP]{style/cjkfont}
%   \begin{fdusyntax}
%     cjkfont = (*<adobe|(fandol)|founder|linux|mac|windows>*)
%   \end{fdusyntax}
%   设置中文字体。
% \end{function}
%
% \begin{function}{style/fontsize}
%   \begin{fdusyntax}
%     fontsize = (*<(-4)|5>*)
%   \end{fdusyntax}
%   设置论文的基础字号。
% \end{function}
%
% \begin{function}[rEXP]{style/fullwidthstop}
%   \begin{fdusyntax}
%     fullwidthstop = (*<\TFF>*)
%   \end{fdusyntax}
%   选择是否把全角实心句点“\symbol{"FF0E}”作为默认的句号形状。
%   这种句号一般用于科技类文章，以便与下标 o 或 0 区分。
% \end{function}
%
% \begin{function}{style/footnotestyle}
% ^^A 这里奇怪的东西是用来控制对齐的。fdusyntax 会吃掉开头的几个
% ^^A 空格，因此这里用 X 来占位。
%   \begin{fdusyntax}
%     footnotestyle = (*<plain|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~libertinus|libertinus*|libertinus-sans|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~pifont|pifont*|pifont-sans|pifont-sans*|\\
%       XXXXXX\mbox{}~~~~~~~~~~~~~~~~xits|xits-sans|xits-sans*>*)
%   \end{fdusyntax}
%   设置脚注编号样式。西文字体设置会影响其默认取值（见
%   表~\ref{tab:footnote-font}）。因此，要使得该选项生效，需将其放置
%   在 |font| 选项之后。带有 |sans| 的为相应的无衬线字体版本；带有
%   |*| 的为阴文样式（即黑底白字）。
% \end{function}
%
% \begin{table}[h]
% \caption{西文字体与脚注编号样式默认值的对应关系}
% \label{tab:footnote-font}
% \centering
% \begin{tabular}{ccccc}
%   \toprule
%   \textbf{西文字体设置} &
%     |libertinus| & |lm|     & |palatino| & |times| \\
%   \midrule
%   \textbf{脚注编号样式默认值} &
%     |libertinus| & |pifont| & |pifont|   & |xits|  \\
%   \bottomrule
% \end{tabular}
% \end{table}
%
% \begin{function}{style/automakecover}
%   \begin{fdusyntax}
%     automakecover = (*<\TTF>*)
%   \end{fdusyntax}
%   是否自动生成论文封面（封一）、指导小组成员名单（封二）和声明页
%   （封三）。封面中的各项信息，可通过 \cs{fdusetup} 录入，具体请参阅
%   \ref{subsubsec:信息录入}~节。
% \end{function}
%
% \begin{function}{\makecoveri,\makecoverii,\makecoveriii}
%   用于\emph{手动}生成论文封面、指导小组成员名单和声明页。这几个
%   命令不能确保页码的正确编排，因此除非必要，您应当始终使用自动生成
%   的封面。
% \end{function}
%
% \subsubsection{信息录入} \label{subsubsec:信息录入}
% \begin{function}{info}
%   \begin{fdusyntax}
%     info = (*\marg{键值列表}*)
%     info / (*\meta{key}*) = (*\meta{value}*)
%   \end{fdusyntax}
%   录入论文信息的通用选项，具体内容见下。以下各选项中，带“|*|”的为
%   对应的英文字段。
% \end{function}
%
% \begin{function}{info/title,info/title*}
%   \begin{fdusyntax}
%     title  = (*\marg{中文标题}*)
%     title* = (*\marg{English title}*)
%   \end{fdusyntax}
%   论文标题。默认会在约 20 个汉字字宽处强制断行，但为了语义的连贯
%   以及排版的美观，如果您的标题长于一行，建议使用“|\\|”手动断行。
% \end{function}
%
% \begin{function}{info/author,info/author*}
%   \begin{fdusyntax}
%     author  = (*\marg{姓名}*)
%     author* = (*\marg{English name}*)
%   \end{fdusyntax}
%   作者姓名。
% \end{function}
%
% \begin{function}{info/supervisor}
%   \begin{fdusyntax}
%     supervisor = (*\marg{姓名}*)
%   \end{fdusyntax}
%   导师姓名。
% \end{function}
%
% \begin{function}{info/department}
%   \begin{fdusyntax}
%     department = (*\marg{名称}*)
%   \end{fdusyntax}
%   院系名称。
% \end{function}
%
% \begin{function}{info/major}
%   \begin{fdusyntax}
%     major = (*\marg{名称}*)
%   \end{fdusyntax}
%   专业名称。
% \end{function}
%
% \begin{function}{info/studentid}
%   \begin{fdusyntax}
%     studentid = (*\marg{数字}*)
%   \end{fdusyntax}
%   作者学号。
% \end{function}
%
% 复旦大学学号共 11 位，前两位为入学年份，之后一位为学生类型代码
% （本科生为 1，硕士生为 2，博士生为 3），接下来的五位为专业代码，
% 最后三位为顺序号。
%
% \begin{function}{info/schoolid}
%   \begin{fdusyntax}
%     schoolid = (*\marg{数字}*)
%   \end{fdusyntax}
%   学校代码。默认值为 10246（这是复旦大学的学校代码）。
% \end{function}
%
% \begin{function}{info/date}
%   \begin{fdusyntax}
%     date = (*\marg{日期}*)
%   \end{fdusyntax}
%   论文完成日期。默认值为文档编译日期（\tn{today}）。
% \end{function}
%
% \begin{function}{info/secretlevel}
%   \begin{fdusyntax}
%     secretlevel = (*<(none)|i|ii|iii>*)
%   \end{fdusyntax}
%   密级。|i|、|ii|、|iii| 分别表示秘密、机密、绝密；|none| 表示论文不
%   涉密，即不显示密级与保密年限。
% \end{function}
%
% \begin{function}{info/secretyear}
%   \begin{fdusyntax}
%     secretyear = (*\marg{年限}*)
%   \end{fdusyntax}
%   保密年限。建议您使用中文，如“五年”。此选项在 |secretlevel = none|
%   时无效。
% \end{function}
%
% \begin{function}{info/instructors}
%   \begin{fdusyntax}
%     instructors = (*\marg{成员 1, 成员 2, ...}*)
%   \end{fdusyntax}
%   指导小组成员。各成员之间需使用英文逗号隔开。为防止歧义，可以用
%   分组括号“|{...}|”把各成员字段括起来。
% \end{function}
%
% \begin{function}{info/keywords,info/keywords*}
%   \begin{fdusyntax}
%     keywords  = (*\marg{中文关键字}*)
%     keywords* = (*\marg{English keywords}*)
%   \end{fdusyntax}
%   关键字。
% \end{function}
%
% \begin{function}{info/clc}
%   \begin{fdusyntax}
%     clc = (*\marg{分类号}*)
%   \end{fdusyntax}
%   中国图书馆分类号（CLC）。
% \end{function}
%
% \subsection{正文编写}
% \begin{fduquote}[喬孟符][宋]
%   作樂府亦有法，曰鳳頭豬肚豹尾六字是也。大概起要美麗，
%   中要浩蕩，結要響亮。尤貴在首尾貫穿，意思清新。茍能若是，
%   斯可以言樂府矣。
% \end{fduquote}
%
% \subsubsection{凤头}
% \begin{function}{\frontmatter}
%   声明前置部分开始。
% \end{function}
%
% 在本模板中，前置部分包含目录、中英文摘要以及符号表等。前置部分的
% 页码采用小写罗马字母，并且与正文分开计数。
%
% \begin{function}{\tableofcontents}
%   生成目录。为了生成完整、正确的目录，您至少需要编译\emph{两次}。
% \end{function}
%
% \begin{function}{abstract}
%   \begin{fdusyntax}
%     % 中文论文                  % 英文论文
%     \begin{abstract}            \begin{abstract}
%       (*\meta{中文摘要} \hspace{2.86cm} \meta{Abstract}*)
%     \end{abstract}              \end{abstract}
%   \end{fdusyntax}
% \end{function}
% \begin{function}[rEXP]{abstract*}
%   \begin{fdusyntax}
%     % 中文论文
%     \begin{abstract*}
%       (*\meta{English abstract}*)
%     \end{abstract*}
%   \end{fdusyntax}
%   摘要。中文模板中，不带星号和带星号的版本分别用来输入中文摘要
%   和英文摘要；英文模板中没有带星号的版本，您只需输入英文摘要。
% \end{function}
%
% 摘要的最后，会显示关键字列表以及中国图书馆分类号（CLC）。
% 这两项可通过 \cs{fdusetup} 录入，具体
% 请参阅 \ref{subsubsec:信息录入}~节。
%
% \begin{function}{notation}
%   \begin{fdusyntax}
%     \begin{notation}(*\oarg{列格式说明}*)
%       (*\meta{符号 1}*)  &  (*\meta{说明}*)  \\
%       (*\meta{符号 2}*)  &  (*\meta{说明}*)  \\
%               (*$\vdots$*)
%       (*\meta{符号 $n$}*)  &  (*\meta{说明}*)
%     \end{notation}
%   \end{fdusyntax}
%   符号表。可选参数“列格式说明”与 \LaTeX 中标准表格的列格式说明
%   语法一致，默认值为“|l p{7.5 cm}|”，即第一列宽度自动调整，第二列
%   限宽 \SI{7.5}{cm}，两列均为左对齐。
% \end{function}
%
% \subsubsection{猪肚}
% \begin{function}{\mainmatter}
%   声明主体部分开始。
% \end{function}
%
% 主体部分是论文的核心，您可以分章节撰写。如有需求，也可以采用
% 多文件编译的方式。主体部分的页码采用阿拉伯数字。
%
% \begin{function}{\footnote}
%   \begin{fdusyntax}
%     \footnote(*\marg{脚注文字}*)
%   \end{fdusyntax}
%   插入脚注。脚注编号样式可利用 |style/footnotestyle| 选项控制，
%   具体见 \ref{subsubsec:论文格式}~小节。
% \end{function}
%
% \begin{function}{axiom,corollary,definition,example,lemma,proof,theorem}
%   \begin{fdusyntax}
%     \begin{proof}
%       (*\meta{证明过程}*)
%     \end{proof}
%   \end{fdusyntax}
%   一系列预定义的数学环境。具体含义见表~\ref{tab:theorem}。
% \end{function}
%
% \begin{table}[h]
%   \caption{预定义的数学环境} \label{tab:theorem}
%   \begin{tabular}{cccccccc}
%     \toprule
%     \textbf{环境名称} &
%       |axiom| & |corollary| & |definition| & |example| &
%       |lemma| & |proof| & |theorem| \\
%     \midrule
%     \textbf{含义} &
%       公理 & 推论 & 定义 & 例 & 引理 & 证明 & 定理 \\
%     \bottomrule
%   \end{tabular}
% \end{table}
%
% 证明环境（|proof|）的最后会添加证毕符号“$\QED$”。要确保该符号
% 正确显示，您需要按照 \ref{subsec:编译方式}~节中的有关说明
% 编译\emph{两次}。
%
% \begin{function}{\caption}
%   \begin{fdusyntax}
%     \caption(*\marg{图表标题}*)
%     \caption(*\oarg{短标题}\marg{长标题}*)
%   \end{fdusyntax}
%   插入图表标题。可选参数 \meta{短标题} 用于图表目录。在
%   \meta{长标题} 中，您可以进行长达多段的叙述；但 \meta{短标题}
%   和单独的 \meta{图表标题} 中则不允许分段。
%   \scite{刘海洋2013latex入门}
% \end{function}
%
% 按照排版惯例，建议您将表格的标题放置在绘制表格的命令之前，
% 而将图片的标题放置在绘图或插图的命令之后。另需注意，
% \tn{caption} 命令必须放置在浮动体环境（如 |table| 和 |figure|）
% 中。
%
% \subsubsection{豹尾}
% \begin{function}{\backmatter}
%   声明后置部分开始。
% \end{function}
%
% 后置部分包含声明页。目前无需开启该部分。
%
% \section{宏包依赖情况}
% 使用不同编译方式、指定不同选项，会导致宏包依赖情况有所不同。
% 具体如下：
% \begin{itemize}
%   \item 在任何情况下，本模板都会\emph{显式}调用以下宏包
%     （或文档类）：
%     \begin{itemize}
%       \item \pkg{expl3}、\pkg{xparse} 和 \pkg{l3keys2e} 宏包，
%         用于构建 \LaTeX3 编程环境 \scite{interfaces3,source3}。
%         它们分属 \pkg{l3kernel} 和 \pkg{l3packages} 宏集。
%       \item \cls{book} 文档类，是 \LaTeXe{} 的标准文档类之一
%         \scite{source2e}。
%       \item \pkg{fontspec} 宏包，提供新一代的字体设置界面。
%       \item \pkg{ctex} 宏包，提供中文排版的通用框架。属于
%         \CTeX{} 宏集 \scite{CTeX}。
%       \item \pkg{amsmath} 宏包，对 \LaTeX{} 的数学排版功能进行了
%         全面扩展。属于 \AmSLaTeX{} 套件。
%       \item \pkg{unicode-math} 宏包，负责处理 Unicode 编码的
%         OpenType 数学字体。
%       \item \pkg{geometry} 宏包，用于调整页面尺寸。
%       \item \pkg{fancyhdr} 宏包，处理页眉页脚。
%       \item \pkg{footmisc} 宏包，处理脚注。
%       \item \pkg{ntheorem} 宏包，提供增强版的定理类环境。
%       \item \pkg{graphicx} 宏包，提供图形插入的接口。
%       \item \pkg{longtable} 宏包，长表格（允许跨页）支持。
%       \item \pkg{caption} 宏包，用于设置题注。
%       \item \pkg{ulem} 宏包，用于绘制下划线。
%     \end{itemize}
%   \item 开启 |style/footnotestyle=pifont| 选项后，会调用
%     \pkg{pifont}宏包。它属于 \pkg{psnfss} 套件。
%   \item 文字绕排功能需要启用 \pkg{xgalley} 宏包，它属于
%     \pkg{l3experimental} 宏集。（目前暂未使用）
% \end{itemize}
%
% 这里只列出了本模板直接调用的宏包。这些宏包自身的调用情况，
% 此处不再具体展开。如有需要，请参阅相关文档。
%
% \input{fduthesis-doc.bbl}
%
% \end{documentation}
%
% \StopEventually{}
%
% \begin{implementation}
%
%^^A 代码部分的页边距
% \newgeometry{
%   left   = 2.50 in,
%   right  = 1.00 in,
%   top    = 1.25 in,
%   bottom = 1.00 in
% }
%
% \section{实现细节}
% 本模板使用 \LaTeX3 语法编写，依赖 \pkg{expl3} 环境，
% 并需调用 \pkg{l3packages} 中的相关宏包。
%
% 按照 \LaTeX3 语法，代码中的空格、换行符与制表符完全忽略，
% 而下划线“|_|”和冒号“|:|”则可作为一般字母使用。
% 正常的空格可以使用“|~|”代替；至于 |~| 原来所表示的“带子”，
% 则要用 \LaTeXe{} 的原始命令 \tn{nobreakspace} 代替。
%
% 以下代码中有一些形如
% \textcolor[HTML]{2E3191}{\textsf{\textlangle *class\textrangle}}
% 的标记，这是 \pkg{DocStrip} 中的“guard”，用来选择性地提取文件。
% “\textsf{*}”和“\textsf{/}”分别表示该部分的开始和结束。不含
% “\textsf{*}”和“\textsf{/}”的 guard 出现在行号右侧，它们用来确定
% 单独一行代码的归属。这些 guard 的颜色深浅不一，用以明确嵌套关系。
%
% 另有若干形如
% \textcolor{MaterialPink}{\textsf{\textlangle @@=fdu\textrangle}}
% 的 guard ，它们由 \pkg{l3docstrip} 定义，用来指示名字空间（模块）。
%
%    \begin{macrocode}
%<@@=fdu>
%<*class|class-en>
\RequirePackage { xparse, l3keys2e }
%    \end{macrocode}
%
% 载入参数配置文件。
%    \begin{macrocode}
\file_input:n { fduthesis.def }
\file_input:n { fduthesis-user.def }
%    \end{macrocode}
%
% \subsection{内部变量声明}
% \begin{macro}{\l_@@_tmpa_box,
%   \l_@@_tmpa_dim,\l_@@_tmpb_dim,
%   \l_@@_tmpa_tl,\l_@@_tmpb_tl,
%^^A   \l_@@_tmpa_int,
%   \l_@@_tmpa_clist,\l_@@_tmpb_clist}
% 临时变量。
%    \begin{macrocode}
\box_new:N   \l_@@_tmpa_box
\dim_new:N   \l_@@_tmpa_dim
\dim_new:N   \l_@@_tmpb_dim
\tl_new:N    \l_@@_tmpa_tl
\tl_new:N    \l_@@_tmpb_tl
% \int_new:N   \l_@@_tmpa_int
\clist_new:N \l_@@_tmpa_clist
\clist_new:N \l_@@_tmpb_clist
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\g_@@_to_book_clist}
% 保存由 \cls{fduthesis} 传入 \cls{book} 文档类的选项列表。
%    \begin{macrocode}
\clist_new:N \g_@@_to_book_clist
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\g_@@_twoside_bool}
% 是否开启双页模式（默认打开）。
%    \begin{macrocode}
\bool_new:N \g_@@_twoside_bool
\bool_set_true:N \g_@@_twoside_bool
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\g_@@_no_fonts_bool}
% 是否禁用默认字体设置。
%    \begin{macrocode}
\bool_new:N \g_@@_no_fonts_bool
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\g_@@_draft_bool}
% 是否开启草稿模式。
%    \begin{macrocode}
\bool_new:N \g_@@_draft_bool
%    \end{macrocode}
% \end{macro}
%
% \subsection{选项处理}
% 定义 |fdu/option| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / option }
  {
%    \end{macrocode}
%
% \begin{macro}{oneside,twoside}
% 设置页面类型为单面或双面。
%    \begin{macrocode}
    oneside .value_forbidden:n = true,
    twoside .value_forbidden:n = true,
    oneside .code:n = {
      \clist_gput_right:Nn \g_@@_to_book_clist { oneside }
      \bool_set_false:N    \g_@@_twoside_bool
    },
    twoside .code:n = {
      \clist_gput_right:Nn \g_@@_to_book_clist { twoside }
      \bool_set_true:N     \g_@@_twoside_bool
    },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{nofonts}
% 是否禁用默认字体设置（默认关闭）。
%    \begin{macrocode}
    nofonts .choice:,
    nofonts .bool_set:N = \g_@@_no_fonts_bool,
    nofonts .default:n = true,
    nofonts .initial:n = false,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{draft}
% 是否开启草稿模式（默认关闭）。
%    \begin{macrocode}
    draft .choice:,
    draft / true  .code:n = {
      \bool_set_true:N     \g_@@_draft_bool
      \clist_gput_right:Nn \g_@@_to_book_clist { draft }
    },
    draft / false .code:n = {
      \bool_set_false:N    \g_@@_draft_bool
    },
    draft .default:n = true,
    draft .initial:n = false
  }
%    \end{macrocode}
% \end{macro}
%
% 将文档类选项传给 |fdu/option|。
%    \begin{macrocode}
\ProcessKeysOptions { fdu / option }
%    \end{macrocode}
%
% \subsection{载入宏包、文档类}
% 载入 \cls{book} 标准文档类，并传入相应的选项。
%    \begin{macrocode}
\PassOptionsToClass { \g_@@_to_book_clist } { book }
\LoadClass { book }
%    \end{macrocode}
%
% \XeLaTeX{} \LuaLaTeX{} 下的字体选取。|no-math| 选项保证该宏包不参与
% 数学字体的设置。
%    \begin{macrocode}
\RequirePackage [ no-math ] { fontspec }
%    \end{macrocode}
%
% 中文排版支持。使用 \XeLaTeX{} 编译时，底层将调用 \pkg{xeCJK} 宏包；
% 使用 \LuaLaTeX{} 编译时，底层则将调用 \pkg{luatexja} 宏包。
% TODO(20170722): 英文模板中文字体的处理。
%    \begin{macrocode}
\RequirePackage [
    UTF8,
%<class-en>    scheme     = plain,
    heading    = true,
%<class>    fontset    = none,
%<class-en>    fontset    = fandol,
    zihao      = \c_@@_def_font_size_tl,
%<class>    linespread = \c_@@_def_line_spread_fp
  ] { ctex }
%    \end{macrocode}
%
% 本模板使用 Unicode 编码的 OpenType 数学字体，此功能由
% \pkg{unicode-math} 宏包实现。为防止冲突，\pkg{amsmath} 必须在它
% 之前引入。
%    \begin{macrocode}
\RequirePackage { amsmath }
\RequirePackage { unicode-math }
%    \end{macrocode}
%
% 设置页面尺寸与页眉页脚。
%    \begin{macrocode}
\RequirePackage { geometry, fancyhdr }
%    \end{macrocode}
%
% 处理脚注。|perpage| 选项将使脚注编号每页清零。
%    \begin{macrocode}
\RequirePackage [ perpage ] { footmisc }
%    \end{macrocode}
%
% 定理环境。
%    \begin{macrocode}
\RequirePackage [ amsmath, thmmarks ] { ntheorem }
%    \end{macrocode}
%
% 插图、表格与浮动体控制。
%    \begin{macrocode}
\RequirePackage { graphicx }
\RequirePackage { longtable }
\RequirePackage { caption }
%    \end{macrocode}
%
% 下划线。
%    \begin{macrocode}
\RequirePackage { ulem }
%    \end{macrocode}
%
% \subsection{页面布局}
% 利用 \pkg{geometry} 宏包设置纸张大小、页面边距以及页眉高度。
%    \begin{macrocode}
\geometry
  {
    paper      = \c_@@_def_paper_size_tl,
    top        = \c_@@_def_page_margin_top_dim,
    bottom     = \c_@@_def_page_margin_bottom_dim,
    left       = \c_@@_def_page_margin_left_dim,
    right      = \c_@@_def_page_margin_right_dim,
    headheight = \c_@@_def_header_height_dim
  }
%    \end{macrocode}
%
% 草稿模式下显示页面边框及页眉、页脚线 。
%    \begin{macrocode}
\bool_if:NT \g_@@_draft_bool
  { \geometry { showframe } }
%    \end{macrocode}
%
% \subsection{字体}
% 根据相关规定，数学表达式中，表示变量的拉丁字母和希腊字母均应当
% 使用斜体。
%    \begin{macrocode}
\unimathsetup { math-style = ISO, bold-style = ISO }
%    \end{macrocode}
%
% \subsubsection{西文字体、数学字体配置}
% 定义 |fdu/style| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/font}
% 预定义西文字体。等宽字体使用 |Ligatures = NoCommon| 选项以禁用连字。
%    \begin{macrocode}
    font .choice:,
    font .value_required:n = true,
%    \end{macrocode}
% Libertinus 系列。
%    \begin{macrocode}
    font / libertinus .code:n = {
      \setmainfont { Libertinus~ Serif }
      \setsansfont { Libertinus~ Sans  }
      \setmonofont { TeX~ Gyre~ Cursor }
        [ Ligatures = NoCommon ]
      \setmathfont { Libertinus~ Math  }
      \keys_set:nn { fdu / style } { footnotestyle = libertinus }
    },
%    \end{macrocode}
% Latin Modern 系列。
%    \begin{macrocode}
    font / lm .code:n = {
      \setmainfont { Latin~ Modern~ Roman }
      \setsansfont { Latin~ Modern~ Sans  }
      \setmonofont { Latin~ Modern~ Mono  }
      \setmathfont { Latin~ Modern~ Math  }
      \keys_set:nn { fdu / style } { footnotestyle = pifont }
    },
%    \end{macrocode}
% Palatino 系列。
%    \begin{macrocode}
    font / palatino .code:n = {
      \setmainfont { TeX~ Gyre~ Pagella       }
      \setsansfont { TeX~ Gyre~ Heros         }
      \setmonofont { TeX~ Gyre~ Cursor        }
        [ Ligatures = NoCommon ]
      \setmathfont { TeX~ Gyre~ Pagella~ Math }
      \keys_set:nn { fdu / style } { footnotestyle = pifont }
    },
%    \end{macrocode}
% Times Roman 系列。
%    \begin{macrocode}
    font / times .code:n = {
      \setmainfont { XITS              }
      \setsansfont { TeX~ Gyre~ Heros  }
      \setmonofont { TeX~ Gyre~ Cursor }
        [ Ligatures = NoCommon ]
      \setmathfont { XITS~ Math        }
      \keys_set:nn { fdu / style } { footnotestyle = xits }
    },
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{中文字体配置}
% \begin{macro}{style/cjkfont}
% 预定义中文（CJK）字体。对于没有粗体的字体，利用
% |AutoFakeBold = true| 获得伪粗体。
%    \begin{macrocode}
%<*class>
    cjkfont .choice:,
    cjkfont .value_required:n = true,
%    \end{macrocode}
% Adobe 系列。
%    \begin{macrocode}
    cjkfont / adobe .code:n = {
      \setCJKmainfont { Adobe~ Song~ Std~ L     }
        [
          ItalicFont   = Adobe~ Kaiti~ Std~ R,
          AutoFakeBold = true
        ]
      \setCJKsansfont { Adobe~ Heiti~ Std~ R    }
        [
          ItalicFont   = Adobe~ Heiti~ Std~ R,
          AutoFakeBold = true
        ]
      \setCJKmonofont { Adobe~ Fangsong~ Std~ R }
        [
          ItalicFont   = Adobe~ Fangsong~ Std~ R,
          AutoFakeBold = true
        ]
      \setCJKfamilyfont { song } { Adobe~ Song~     Std~ L }
      \setCJKfamilyfont { hei  } { Adobe~ Heiti~    Std~ R }
      \setCJKfamilyfont { fang } { Adobe~ Fangsong~ Std~ R }
      \setCJKfamilyfont { kai  } { Adobe~ Kaiti~    Std~ R }
    },
%    \end{macrocode}
% Fandol 系列。
%    \begin{macrocode}
    cjkfont / fandol .code:n = {
      \setCJKmainfont { FandolSong }
        [
          ItalicFont   = FandolKai
        ]
      \setCJKsansfont { FandolHei  }
        [
          ItalicFont   = FandolHei
        ]
      \setCJKmonofont { FandolFang }
        [
          ItalicFont   = FandolFang,
          AutoFakeBold = true
        ]
      \setCJKfamilyfont { song } { FandolSong }
      \setCJKfamilyfont { hei  } { FandolHei  }
      \setCJKfamilyfont { fang } { FandolFang }
      \setCJKfamilyfont { kai  } { FandolKai  }
    },
%    \end{macrocode}
% 方正系列。
%    \begin{macrocode}
    cjkfont / founder .code:n = {
      \setCJKmainfont { FZShuSong-Z01  }
        [
          BoldFont     = FZXiaoBiaoSong-B05,
          ItalicFont   = FZKai-Z03
        ]
      \setCJKsansfont { FZHei-B01      }
        [
          ItalicFont   = FZHei-B01,
          AutoFakeBold = true
        ]
      \setCJKmonofont { FZFangSong-Z02 }
        [
          ItalicFont   = FZFangSong-Z02,
          AutoFakeBold = true
        ]
      \setCJKfamilyfont { song } { FZShuSong -Z01 }
      \setCJKfamilyfont { hei  } { FZHei     -B01 }
      \setCJKfamilyfont { fang } { FZFangSong-Z02 }
      \setCJKfamilyfont { kai  } { FZKai     -Z03 }
    },
%    \end{macrocode}
% Linux 系列。（没做）
%    \begin{macrocode}
%    cjkfont / linux .code:n = {
%      \setCJKmainfont{ SimSun }
%        [ BoldFont = SimHei, ItalicFont   = KaiTi ]
%    },
%    \end{macrocode}
% Mac （华文）系列。
%    \begin{macrocode}
    cjkfont / mac .code:n = {
      \setCJKmainfont { STSong     }
        [
          BoldFont     = STZhongsong,
          ItalicFont   = STKaiti
        ]
      \setCJKsansfont { STHeiti    }
        [
          ItalicFont   = STHeiti,
          AutoFakeBold = true
        ]
      \setCJKmonofont { STFangsong }
        [
          ItalicFont   = STFangsong,
          AutoFakeBold = true
        ]
      \setCJKfamilyfont { song } { STSong     }
      \setCJKfamilyfont { hei  } { STHeiti    }
      \setCJKfamilyfont { fang } { STFangsong }
      \setCJKfamilyfont { kai  } { STKaiti    }
    },
%    \end{macrocode}
% Windows （中易）系列。
%    \begin{macrocode}
    cjkfont / windows .code:n = {
      \setCJKmainfont { SimSun   }
        [
          ItalicFont   = KaiTi,
          AutoFakeBold = true
        ]
      \setCJKsansfont { SimHei   }
        [
          ItalicFont   = SimHei,
          AutoFakeBold = true
        ]
      \setCJKmonofont { FangSong }
        [
          ItalicFont   = FangSong,
          AutoFakeBold = true
        ]
      \setCJKfamilyfont { song } { SimSun   }
      \setCJKfamilyfont { hei  } { SimHei   }
      \setCJKfamilyfont { fang } { FangSong }
      \setCJKfamilyfont { kai  } { KaiTi    }
    }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[TF]{\fdu_family_if_exist:n}
% 判断字体族是否存在。
%    \begin{macrocode}
\prg_new_conditional:Npnn \fdu_family_if_exist:n #1 { TF }
  {
%    \end{macrocode}
% \XeTeX{} 引擎下直接利用 \pkg{xeCJK} 宏包提供的函数。
%    \begin{macrocode}
    \sys_if_engine_xetex:TF
      {
        \xeCJK_family_if_exist:nTF { #1 }
          { \prg_return_true: } { \prg_return_false: }
      }
      {
%    \end{macrocode}
% \LuaTeX{} 引擎下需要利用 \pkg{ctex} 宏包提供的函数。这两个函数
% 的参数略有不同。
%
% TODO(2017/07/22): \cs{ctex_ltj_family_if_exist:xNTF} 将在下一个版本
% 中被改为 |nNTF| 型。需要有最低版本限制。
%    \begin{macrocode}
        \sys_if_engine_luatex:T
          {
            \ctex_ltj_family_if_exist:xNTF { #1 } \l_@@_tmpa_tl
              { \prg_return_true: } { \prg_return_false: }
            \tl_clear:N \l_@@_tmpa_tl
          }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% 以下为宋、黑、仿、楷四种中文字体各定义了一些内部函数。函数
% \cs{xeCJK_family_if_exist:nTF} 是不能展开的，因此此处使用了
% \cs{cs_new_protected:Nn} 禁止展开。
% 见 \url{https://tex.stackexchange.com/q/380612} 和
% \url{https://tex.stackexchange.com/q/380556}。
%
% \begin{macro}{\fdu_cjk_font_song:}
% 宋体，相当于普通罗马字体。
%    \begin{macrocode}
\cs_new_protected:Nn \fdu_cjk_font_song:
  {
    \fdu_family_if_exist:nTF { song }
      { \CJKfamily { song } } { \rmfamily }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_cjk_font_hei:}
% 黑体，相当于无衬线体。
%    \begin{macrocode}
\cs_new_protected:Nn \fdu_cjk_font_hei:
  {
    \fdu_family_if_exist:nTF { hei  }
      { \CJKfamily { hei  } } { \sffamily }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_cjk_font_fang:}
% 仿宋，相当于打字机字体（或等宽字体）。
%    \begin{macrocode}
\cs_new_protected:Nn \fdu_cjk_font_fang:
  {
    \fdu_family_if_exist:nTF { fang }
      { \CJKfamily { fang } } { \ttfamily }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_cjk_font_kai:}
% 楷体，相当于罗马字体的意大利形状（斜体）。
%    \begin{macrocode}
\cs_new_protected:Nn \fdu_cjk_font_kai:
  {
    \fdu_family_if_exist:nTF { kai  }
      { \CJKfamily { kai  } } { \rmfamily \itshape }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu@song,\fdu@hei,\fdu@fang,\fdu@kai}
% \cs{fdu_cjk_font_kai:} 等一些 \LaTeX3 风格的命令在 |toc| 文件里面
% 无法正常使用，因此重新定义为 \LaTeXe{} 风格的命令。
%    \begin{macrocode}
\NewDocumentCommand \fdu@song { } { \fdu_cjk_font_song: }
\NewDocumentCommand \fdu@hei  { } { \fdu_cjk_font_hei:  }
\NewDocumentCommand \fdu@fang { } { \fdu_cjk_font_fang: }
\NewDocumentCommand \fdu@kai  { } { \fdu_cjk_font_kai:  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{字号}
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%</class>
%    \end{macrocode}
%
% \begin{macro}{style/fontsize}
% |fontsize| 不是文档类选项，不能传给 \pkg{ctex} 宏包
% 或者 \cls{book} 文档类，因此只能手动重定义字号命令。
%    \begin{macrocode}
    fontsize .choice:,
    fontsize .value_required:n = true,
    fontsize / -4 .code:n = { },
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\tiny,\scriptsize,\footnotesize,\small,
%   \normalsize,\large,\Large,\LARGE,\huge,\Huge}
% 默认使用小四号字，所以只有五号字需要重新设置。
%    \begin{macrocode}
    fontsize /  5 .code:n = {
      \RenewDocumentCommand \tiny         { } { \zihao {  7 } }
      \RenewDocumentCommand \scriptsize   { } { \zihao { -6 } }
      \RenewDocumentCommand \footnotesize { } { \zihao {  6 } }
      \RenewDocumentCommand \small        { } { \zihao { -5 } }
      \RenewDocumentCommand \normalsize   { } { \zihao {  5 } }
      \RenewDocumentCommand \large        { } { \zihao { -4 } }
      \RenewDocumentCommand \Large        { } { \zihao { -3 } }
      \RenewDocumentCommand \LARGE        { } { \zihao { -2 } }
      \RenewDocumentCommand \huge         { } { \zihao {  2 } }
      \RenewDocumentCommand \Huge         { } { \zihao {  1 } }
%<class>    },
%<class-en>    }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{句号}
% \begin{macro}{style/fullwidthstop}
% 设置句号形状（圆圈或是圆点）。
% 本模板采用的实现方法是将“\symbol{"3002}”设置为活动符，
% 并定义为句点“\symbol{"FF0E}”。
%
% \pkg{xeCJK} 宏包提供了 |Mapping = fullwidth-stop| 和 |full-stop|
% 选项，也能实现两种句号的切换。此种方法是基于字体映射实现的，
% 当需要同时使用两种句号的时候将会带来不便。另外通过 \LuaLaTeX{}
% 编译时，底层使用 \pkg{luatexja} 而非\pkg{xeCJK}，也必须采取
% \tn{catcode} 的手段来切换。
%    \begin{macrocode}
%<*class>
    fullwidthstop .choice:,
    fullwidthstop / true  .code:n = {
      \char_set_active_eq:nN { "3002 }
        \c_@@_full_stop_fullwidth_tl
      \char_set_catcode_active:n { "3002 }
    },
    fullwidthstop / false .code:n = { },
    fullwidthstop .default:n  = true
%</class>
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{章节标题结构}
% |\keys_set:nn {ctex}| 实际相当于 \cs{ctexset}。
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
%    \end{macrocode}
%
% 设置章（chapter）、节（section）与小节（sub-section）标题样式。
% 此处使用 |fixskip = true| 选项来抑制前后的多余间距。
%    \begin{macrocode}
    chapter = {
%<class>      format      = \c_@@_def_chapter_format_tl,
%<*class-en>
      format      = \c_@@_def_chapter_format_en_tl,
      nameformat  = \c_@@_def_chapter_name_format_en_tl,
      titleformat = \c_@@_def_chapter_title_format_en_tl,
      aftername   = \c_@@_def_chapter_after_name_en_tl,
%</class-en>
      beforeskip  = \c_@@_def_chapter_before_sep_tl,
      afterskip   = \c_@@_def_chapter_after_sep_tl,
      number      = { \arabic { chapter } },
      fixskip     = true
    },
    section = {
%<class>      format      = \c_@@_def_section_format_tl,
%<class-en>      format      = \c_@@_def_section_format_en_tl,
      beforeskip  = \c_@@_def_section_before_sep_tl,
      afterskip   = \c_@@_def_section_after_sep_tl,
      fixskip     = true
    },
    subsection = {
%<class>      format      = \c_@@_def_subsection_format_tl,
%<class-en>      format      = \c_@@_def_subsection_format_en_tl,
      beforeskip  = \c_@@_def_subsection_before_sep_tl,
      afterskip   = \c_@@_def_subsection_after_sep_tl,
      fixskip     = true
    }
  }
%    \end{macrocode}
%
% \subsection{页眉页脚}
% 清除默认页眉页脚格式。
%    \begin{macrocode}
\fancyhf { }
%    \end{macrocode}
%
% \begin{macro}{\l_@@_header_center_mark_tl}
% 保存中间页眉的文字。正文中设置为空，目录、摘要、符号表等设置为
% 相应标题。
%    \begin{macrocode}
\tl_new:N \l_@@_header_center_mark_tl
%    \end{macrocode}
% \end{macro}
%
% 构建页眉，要在单面或双面下分别设置。
% \cs{fancyhead} 的选项中，|E| 和 |O| 分别表示偶数（even）和奇数
% （odd）， 而 |L|、|R| 和 |C| 则分别表示左（left）、右（right）
% 和中间（center）。按照通常的排版规则，在双面模式下，偶数页的中间
% 页眉文字在左，奇数页则在右。单面模式下，左右页眉都要显示。
%    \begin{macrocode}
\bool_if:NTF \g_@@_twoside_bool
%<*class>
  {
    \fancyhead [ EL ] { \small \nouppercase { \fdu@kai \leftmark  } }
    \fancyhead [ OR ] { \small \nouppercase { \fdu@kai \rightmark } }
  }
  {
    \fancyhead [ L ] { \small \nouppercase { \fdu@kai \leftmark  } }
    \fancyhead [ R ] { \small \nouppercase { \fdu@kai \rightmark } }
    \fancyhead [ C ]
      {
        \small \nouppercase
          { \fdu@kai \l_@@_header_center_mark_tl }
      }
  }
%</class>
%<*class-en>
  {
    \fancyhead [ EL ] { \small \nouppercase { \itshape \leftmark  } }
    \fancyhead [ OR ] { \small \nouppercase { \itshape \rightmark } }
  }
  {
    \fancyhead [ L ] { \small \nouppercase { \itshape \leftmark  } }
    \fancyhead [ R ] { \small \nouppercase { \itshape \rightmark } }
    \fancyhead [ C ]
      {
        \small \nouppercase
          { \itshape \l_@@_header_center_mark_tl }
      }
  }
%</class-en>
%    \end{macrocode}
%
% 构建页脚，用来显示页码。选项 |C| 表示居中（center）。
%    \begin{macrocode}
\fancyfoot [ C ] { \small \thepage }
%    \end{macrocode}
%
% 关闭横线显示（未启用）。
%    \begin{macrocode}
% \RenewDocumentCommand \headrulewidth { } { 0 pt }
%    \end{macrocode}
%
% \begin{macro}{\fdu_front_matter_header:n}
% 在单页模式下，设置前导部分（包括目录、摘要、符号表等）的页眉中间
% 为相应标题，左右为空。
%    \begin{macrocode}
\cs_new:Npn \fdu_front_matter_header:n #1
  {
    \bool_if:NTF \g_@@_twoside_bool
      { \markboth { #1 } { #1 } }
      {
        \markboth { } { }
        \tl_gset:Nn \l_@@_header_center_mark_tl { #1 }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\cleardoublepage}
% 重定义 \tn{cleardoublepage}，使得偶数页面在没有内容时也不显示
% 页眉页脚。\\
% 见 http://tex.stackexchange.com/q/1681 \\
% 最后清空中间页眉，确保正文部分页眉显示正确。
%    \begin{macrocode}
\RenewDocumentCommand \cleardoublepage { }
  {
    \clearpage
    \bool_if:NT \g_@@_twoside_bool
      {
        \int_if_odd:nF \c@page
          { \hbox:n { } \thispagestyle { empty } \newpage }
      }
    \tl_gset:Nn \l_@@_header_center_mark_tl { }
  }
%    \end{macrocode}
% \end{macro}
%
% \pkg{ctex} 宏包使用 |heading| 选项后，会把页面格式设置为
% |headings|。因此必须在 \pkg{ctex} 调用之后重新设置 \cs{pagestyle}
% 为 |fancy|。
%    \begin{macrocode}
\pagestyle { fancy }
%    \end{macrocode}
%
% \begin{macro}{\sectionmark}
% 重定义右侧页眉格式（否则貌似少了一个空格）。
%    \begin{macrocode}
\RenewDocumentCommand \sectionmark { m }
  { \markright { \CTEXthesection \negthinspace \quad #1 } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{脚注}
% \changes{v0.3}{2017/02/21}{支持脚注。}
% \subsubsection{编号样式}
% \begin{macro}{\c_@@_fn_style_plain_tl,
%   \c_@@_fn_style_libertinus_tl,
%   \c_@@_fn_style_libertinus_negative_tl,
%   \c_@@_fn_style_libertinus_sans_tl,
%   \c_@@_fn_style_pifont_tl,
%   \c_@@_fn_style_pifont_negative_tl,
%   \c_@@_fn_style_pifont_sans_tl,
%   \c_@@_fn_style_pifont_sans_negative_tl,
%   \c_@@_fn_style_xits_tl,
%   \c_@@_fn_style_xits_sans_tl,
%   \c_@@_fn_style_xits_sans_negative_tl}
% 各种脚注编号样式的名称。
%    \begin{macrocode}
\tl_const:Nn \c_@@_fn_style_plain_tl           { plain           }
\tl_const:Nn \c_@@_fn_style_libertinus_tl      { libertinus      }
\tl_const:Nn \c_@@_fn_style_libertinus_negative_tl
  { libertinus* }
\tl_const:Nn \c_@@_fn_style_libertinus_sans_tl { libertinus-sans }
\tl_const:Nn \c_@@_fn_style_pifont_tl          { pifont          }
\tl_const:Nn \c_@@_fn_style_pifont_negative_tl { pifont*         }
\tl_const:Nn \c_@@_fn_style_pifont_sans_tl     { pifont-sans     }
\tl_const:Nn \c_@@_fn_style_pifont_sans_negative_tl
  { pifont-sans* }
\tl_const:Nn \c_@@_fn_style_xits_tl            { xits            }
\tl_const:Nn \c_@@_fn_style_xits_sans_tl       { xits-sans       }
\tl_const:Nn \c_@@_fn_style_xits_sans_negative_tl
  { xits-sans* }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l_@@_fn_style_tl}
% 保存当前使用的脚注编号样式。
%    \begin{macrocode}
\tl_new:N \l_@@_fn_style_tl
%    \end{macrocode}
% \end{macro}
%
% 在 |nofonts=true| 的情况下设置脚注样式为 |plain|。
%    \begin{macrocode}
\bool_if:NT \g_@@_no_fonts_bool
  { \tl_set_eq:NN \l_@@_fn_style_tl \c_@@_fn_style_plain_tl }
%    \end{macrocode}
%
% 脚注样式也归入 |fdu/style| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / style }
  {
%    \end{macrocode}
%
% \begin{macro}{style/footnotestyle}
% 脚注类型共分四大类：
% |plain|：使用当前字体；
% |libertinus|：取自 Libertinus Serif 和 Libertinus Sans 字体；
% |pifont|：使用 \pkg{pifont} 宏包；
% |xits|：取自 XITS-Math 字体。
%
% 不带任何修饰的为衬线阳文符号，带“|sans|”的为无衬线符号，带“|*|”的
% 为阴文版本。
%    \begin{macrocode}
    footnotestyle .choices:nn = {
      plain,
      libertinus, libertinus*, libertinus-sans,
      pifont,     pifont*,     pifont-sans,     pifont-sans*,
      xits,                    xits-sans,       xits-sans*
    }
%    \end{macrocode}
%
% 若使用 |pifont| 类型，则需引入 \pkg{pifont} 宏包；
% 若使用 |xits| 类型，则需调用 XITS Math 字体。
%    \begin{macrocode}
    {
      \tl_gset_eq:NN \l_@@_fn_style_tl \l_keys_choice_tl
      \int_compare:nTF
        { 5 <= \l_keys_choice_int <= 8 }
        { \RequirePackage { pifont } }
        {
          \int_compare:nT
            { 9 <= \l_keys_choice_int <= 11 }
            { \setmathfont { XITS~ Math } [ version = fn-XITS ] }
        }
    },
    footnotestyle .value_required:n = true
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_libertinus:n}
% |libertinus| 普通版。\numrange{1}{20} 为数字，\numrange{21}{46}
% 为小写英文字母，\numrange{47}{72} 为大写英文字母。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_libertinus:n #1
  {
    \int_compare:nTF { #1 >= 21 }
      {
        \int_compare:nTF { #1 >= 47 }
          { \symbol { \int_eval:n { "24B6 - 47 + #1 } } }
          { \symbol { \int_eval:n { "24D0 - 21 + #1 } } }
      }
      { \symbol { \int_eval:n { "2460 - 1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_libertinus_negative:n}
% |libertinus| 阴文衬线版。只含 \numrange{1}{20}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_libertinus_negative:n #1
  {
    \int_compare:nTF { #1 >= 11 }
      { \symbol { \int_eval:n { "24EB - 11 + #1 } } }
      { \symbol { \int_eval:n { "2776 -  1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_libertinus_sans:n}
% |libertinus| 阳文无衬线版。符号排列与普通版相同。
%    \begin{macrocode}
\cs_new_eq:NN \@@_fn_symbol_libertinus_sans:n
  \@@_fn_symbol_libertinus:n
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_pifont:n}
% |pifont| 普通版。以下四种都只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont:n #1
  { \ding { \int_eval:n { 171 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_pifont_negative:n}
% |pifont| 阴文衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_negative:n #1
  { \ding { \int_eval:n { 181 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_pifont_sans:n}
% |pifont| 阳文无衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_sans:n #1
  { \ding { \int_eval:n { 191 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_pifont_sans_negative:n}
% |pifont| 阴文无衬线版。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_pifont_sans_negative:n #1
  { \ding { \int_eval:n { 201 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_xits:n}
% |xits| 普通版。\numrange{1}{9} 为数字，\numrange{10}{35} 为小写
% 英文字母，\numrange{36}{61} 为大写英文字母。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits:n #1
  {
    \int_compare:nTF { #1 >= 10 }
      {
        \int_compare:nTF { #1 >= 36 }
          { \symbol { \int_eval:n { "24B6 - 36 + #1 } } }
          { \symbol { \int_eval:n { "24D0 - 10 + #1 } } }
      }
      { \symbol { \int_eval:n { "2460 - 1 + #1 } } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_xits_sans:n}
% |xits| 阳文无衬线版。只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits_sans:n #1
  { \symbol { \int_eval:n { "2780 - 1 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_fn_symbol_xits_sans_negative:n}
% |xits| 阴文无衬线版。也只包含 \numrange{1}{10}。
%    \begin{macrocode}
\cs_new:Npn \@@_fn_symbol_xits_sans_negative:n #1
  { \symbol { \int_eval:n { "278A - 1 + #1 } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\thefootnote,\fdu_footnote_number:n}
% 重定义脚注编号。
%    \begin{macrocode}
\RenewDocumentCommand \thefootnote { }
  { \fdu_footnote_number:n { \value { footnote } } }
\cs_new:Npn \fdu_footnote_number:n #1
  {
    \tl_case:NnF \l_@@_fn_style_tl
      {
%    \end{macrocode}
%
% |plain| 类型直接使用计数器 |footnote| 的值。
%    \begin{macrocode}
        \c_@@_fn_style_plain_tl
          { \int_use:N #1 }
%    \end{macrocode}
%
% |libertinus| 类型需要使用 Libertinus Serif 或
% Libertinus Sans 字体。
%    \begin{macrocode}
        \c_@@_fn_style_libertinus_tl
          {
            \fontspec { Libertinus~ Serif }
            \@@_fn_symbol_libertinus:n { #1 }
          }
        \c_@@_fn_style_libertinus_negative_tl
          {
            \fontspec { Libertinus~ Serif }
            \@@_fn_symbol_libertinus_negative:n { #1 }
          }
        \c_@@_fn_style_libertinus_sans_tl
          {
            \fontspec { Libertinus~ Sans }
            \@@_fn_symbol_libertinus_sans:n { #1 }
          }
%    \end{macrocode}
%
% |pifont| 类型无需进行额外的操作。
%    \begin{macrocode}
        \c_@@_fn_style_pifont_tl
          { \@@_fn_symbol_pifont:n { #1 } }
        \c_@@_fn_style_pifont_negative_tl
          { \@@_fn_symbol_pifont_negative:n { #1 } }
        \c_@@_fn_style_pifont_sans_tl
          { \@@_fn_symbol_pifont_sans:n { #1 } }
        \c_@@_fn_style_pifont_sans_negative_tl
          { \@@_fn_symbol_pifont_sans_negative:n { #1 } }
%    \end{macrocode}
%
% |xits| 类型需要临时切换数学字体。
%    \begin{macrocode}
        \c_@@_fn_style_xits_tl
          {
            \mathversion { fn-XITS }
            $ \@@_fn_symbol_xits:n { #1 } $
          }
        \c_@@_fn_style_xits_sans_tl
          {
            \mathversion { fn-XITS }
            $ \@@_fn_symbol_xits_sans:n { #1 } $
          }
        \c_@@_fn_style_xits_sans_negative_tl
          {
            \mathversion { fn-XITS }
            $ \@@_fn_symbol_xits_sans_negative:n { #1 } $
          }
      }
%    \end{macrocode}
%
% 变量 \cs{l_@@_fn_style_tl} 保存的类型未知时，默认使用 |plain|
% 类型。
%    \begin{macrocode}
      { \int_use:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{整体样式}
% \begin{macro}{\@makefntext}
% 重定义内部脚注文字命令。
%    \begin{macrocode}
\RenewDocumentCommand \@makefntext { +m }
  {
%    \end{macrocode}
%
% 脚注编号不使用上标，宽度为 \SI{1.5}{em}。
%
% 见 http://tex.stackexchange.com/q/19844
%    \begin{macrocode}
    \dim_set:Nn \l_@@_tmpa_dim { \textwidth - 1.5 em }
    \makebox [ 1.5 em ] [ l ] { \@thefnmark }
%    \end{macrocode}
%
% 脚注文字用 |parbox| 封装。首段无缩进，第二段起缩进 \SI{2}{em}。
%    \begin{macrocode}
    \parbox [ t ] { \l_@@_tmpa_dim }
      {
        \everypar { \hspace* { 2 em } }
        \hspace* { -2 em } #1
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{定理环境}
% \changes{v0.3}{2017/05/07}{新增定理环境。}
% \begin{macro}{\c_@@_thm_style_plain_clist,
%   \c_@@_thm_style_break_clist}
% 保存 |plain|、|break| 两种类型的定理样式名称。
%    \begin{macrocode}
\clist_const:Nn \c_@@_thm_style_plain_clist
  { plain, margin, change }
\clist_const:Nn \c_@@_thm_style_break_clist
  { break, marginbreak, changebreak }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l_@@_thm_style_tl,
%   \l_@@_thm_header_font_tl,
%   \l_@@_thm_body_font_tl,
%   \l_@@_thm_qed_tl,
%   \l_@@_thm_counter_tl}
% 定理所需的一些字段。
%    \begin{macrocode}
\tl_new:N \l_@@_thm_style_tl
\tl_new:N \l_@@_thm_header_font_tl
\tl_new:N \l_@@_thm_body_font_tl
\tl_new:N \l_@@_thm_qed_tl
\tl_new:N \l_@@_thm_counter_tl
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{theorem/style,
%   theorem/headerfont,
%   theorem/bodyfont,
%   theorem/qed,
%   theorem/counter}
% 定义 |fdu/theorem| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / theorem }
  {
    style      .tl_set:N  = \l_@@_thm_style_tl,
    headerfont .tl_set:N  = \l_@@_thm_header_font_tl,
    bodyfont   .tl_set:N  = \l_@@_thm_body_font_tl,
    qed        .tl_set:N  = \l_@@_thm_qed_tl,
    counter    .tl_set:N  = \l_@@_thm_counter_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_new:nnnn,\fdu_thm_new:Vnnn}
% 带编号的定理环境。|#1| = 样式， |#2| = 计数器，|#3| = 定理环境名称，
% |#4| = 定理头文字。
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_new:nnnn #1 #2 #3 #4
  {
    \theoremstyle { #1 }
    \newtheorem { #3 } { #4 } [ #2 ]
  }
\cs_generate_variant:Nn \fdu_thm_new:nnnn { Vnnn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_new_no_number:nnn,
%   \fdu_thm_new_no_number:Vnn}
% 不带编号的定理环境。|#1| = 样式， |#2| = 定理环境名称，
% |#3| = 定理头文字。
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_new_no_number:nnn #1 #2 #3
  {
    \theoremstyle { #1 }
    \newtheorem { #2 } { #3 }
  }
\cs_generate_variant:Nn \fdu_thm_new_no_number:nnn { Vnn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_set_qed:n,
%   \fdu_thm_set_header_font:n,\fdu_thm_set_body_font:n}
% 封装 \pkg{ntheorem} 宏包提供的若干命令，分别用以设置证毕符号、
% 定理头字体和定理正文字体。
%    \begin{macrocode}
\cs_new:Npn \fdu_thm_set_qed:n         #1
  { \theoremsymbol     { #1 } }
\cs_new:Npn \fdu_thm_set_header_font:n #1
  { \theoremheaderfont { #1 } }
\cs_new:Npn \fdu_thm_set_body_font:n   #1
  { \theorembodyfont   { #1 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_thm_set_qed:V,
%   \fdu_thm_set_header_font:V,\fdu_thm_set_body_font:V}
% 生成以上三个函数的变体。
%    \begin{macrocode}
\cs_generate_variant:Nn \fdu_thm_set_qed:n         { V }
\cs_generate_variant:Nn \fdu_thm_set_header_font:n { V }
\cs_generate_variant:Nn \fdu_thm_set_body_font:n   { V }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdunewtheorem,\fdunewtheorem*}
% 创建新的定理环境。
%    \begin{macrocode}
\NewDocumentCommand \fdunewtheorem { s o m m }
  {
%    \end{macrocode}
%
% 默认情况下，由 \cs{fdunewtheorem*} 创建的定理其证毕符号为
% \cs{QED}，而由 \cs{fdunewtheorem} 创建的则不带证毕符号。符号
% \cs{QED} 由 \pkg{unicode-math} 宏包提供。
%    \begin{macrocode}
    \IfBooleanTF #1
      { \tl_set:Nn \l_@@_thm_qed_tl { \ensuremath { \QED } } }
      { \tl_set:Nn \l_@@_thm_qed_tl { } }
%    \end{macrocode}
%
% 设置默认样式为 |plain|。
%    \begin{macrocode}
    \tl_set:Nn \l_@@_thm_style_tl { plain }
%    \end{macrocode}
%
% 处理可选参数。利用 |fdu/theorem| 键值对设置，并按此修改证毕符号、
% 定理头字体和定理正文字体。
%    \begin{macrocode}
    \IfValueT { #2 }
      { \keys_set:nn { fdu / theorem } { #2 } }
    \fdu_thm_set_header_font:V \l_@@_thm_header_font_tl
    \fdu_thm_set_body_font:V   \l_@@_thm_body_font_tl
    \fdu_thm_set_qed:V         \l_@@_thm_qed_tl
%    \end{macrocode}
%
% \cs{fdunewtheorem} 负责创建编号定理，而 \cs{fdunewtheorem*}
% 则负责创建无编号定理。以下分这两种情况处理。
%    \begin{macrocode}
    \IfBooleanTF #1
      {
%    \end{macrocode}
%
% 带 |*| 的版本原则上只接受 |plain| 和 |break| 两种样式，其余样式
% 将被转换成这两者其中之一。
%
% TODO(20170602): 给出重定义样式的警告。
%    \begin{macrocode}
        \clist_if_in:NVTF
          \c_@@_thm_style_plain_clist
          \l_@@_thm_style_tl
          { \tl_set:Nn \l_@@_thm_style_tl { plain } }
          {
            \clist_if_in:NVTF
              \c_@@_thm_style_break_clist
              \l_@@_thm_style_tl
              { \tl_set:Nn \l_@@_thm_style_tl { break } }
% TODO(20170602): 给出样式未定义错误。
              { }
          }
%    \end{macrocode}
%
% \pkg{ntheorem} 宏包提供的无编号定理带有 |nonumber| 前缀，
% 这里将其加上。
%    \begin{macrocode}
        \tl_put_left:Nn \l_@@_thm_style_tl { nonumber }
        \fdu_thm_new_no_number:Vnn \l_@@_thm_style_tl
          { #3 } { #4 }
      }
      {
%    \end{macrocode}
%
% 不带 |*| 的版本支持不含“|nonumber|”的所有定理样式。
%    \begin{macrocode}
        \clist_clear:N \l_@@_tmpa_clist
        \clist_concat:NNN \l_@@_tmpa_clist
          \c_@@_thm_style_plain_clist \c_@@_thm_style_break_clist
        \clist_if_in:NVF
          \l_@@_tmpa_clist \l_@@_thm_style_tl
% TODO(20170602): 给出样式未定义错误。
          { }
        \fdu_thm_new:Vnnn \l_@@_thm_style_tl
          { \l_@@_thm_counter_tl } { #3 } { #4 }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{图表绘制；浮动体}
% \changes{v0.3}{2017/07/09}{支持浮动体。}
% 分别设置浮动体 |figure| 和 |table| 的标题样式。
%    \begin{macrocode}
\captionsetup [ figure ]
  {
    font     = small,
    labelsep = quad
  }
\captionsetup [ table  ]
  {
    font     = { small, sf },
    labelsep = quad
  }
%    \end{macrocode}
%
% \begin{macro}{\thefigure,\thetable}
% 重定义图表编号。
%    \begin{macrocode}
\RenewDocumentCommand \thefigure { }
  { \arabic { chapter } - \arabic { figure } }
\RenewDocumentCommand \thetable  { }
  { \arabic { chapter } - \arabic { table  } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{封面}
% \subsubsection{信息录入}
% \begin{macro}{\l_@@_info_title_tl,
%   \l_@@_info_date_tl,
%   \l_@@_info_author_tl,
%   \l_@@_info_supervisor_tl,
%   \l_@@_info_instructors_clist,
%   \l_@@_info_department_tl,
%   \l_@@_info_major_tl,
%   \l_@@_info_student_id_tl,
%   \l_@@_info_school_id_tl,
%   \l_@@_info_keywords_clist,
%   \l_@@_info_clc_tl}
% 封面所需的一些字段。
%    \begin{macrocode}
\tl_new:N    \l_@@_info_title_tl
\tl_new:N    \l_@@_info_date_tl
\tl_new:N    \l_@@_info_author_tl
\tl_new:N    \l_@@_info_supervisor_tl
\clist_new:N \l_@@_info_instructors_clist
\tl_new:N    \l_@@_info_department_tl
\tl_new:N    \l_@@_info_major_tl
\tl_new:N    \l_@@_info_student_id_tl
\tl_new:N    \l_@@_info_school_id_tl
\clist_new:N \l_@@_info_keywords_clist
\tl_new:N    \l_@@_info_clc_tl
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l_@@_info_title_en_tl,
%   \l_@@_info_author_en_tl,
%   \l_@@_info_supervisor_en_tl,
%   \l_@@_info_department_en_tl,
%   \l_@@_info_major_en_tl,
%   \l_@@_info_keywords_en_clist}
% 对应的英文字段。
%    \begin{macrocode}
\tl_new:N    \l_@@_info_title_en_tl
\tl_new:N    \l_@@_info_author_en_tl
\tl_new:N    \l_@@_info_supervisor_en_tl
\tl_new:N    \l_@@_info_department_en_tl
\tl_new:N    \l_@@_info_major_en_tl
\clist_new:N \l_@@_info_keywords_en_clist
%    \end{macrocode}
% \end{macro}
%
% 定义 |fdu/info| 键值类。
%    \begin{macrocode}
\keys_define:nn { fdu / info }
  {
%    \end{macrocode}
%
% \begin{macro}{info/title,info/title}
% 论文题目。以下带星号的项目均表示相应的英文字段。
%    \begin{macrocode}
    title       .tl_set:N    = \l_@@_info_title_tl,
    title*      .tl_set:N    = \l_@@_info_title_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/date}
% 论文完成日期。
%    \begin{macrocode}
    date        .tl_set:N    = \l_@@_info_date_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/author,info/author*}
% 作者姓名。
%    \begin{macrocode}
    author      .tl_set:N    = \l_@@_info_author_tl,
    author*     .tl_set:N    = \l_@@_info_author_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/supervisor,info/supervisor*}
% 导师姓名。
%    \begin{macrocode}
    supervisor  .tl_set:N    = \l_@@_info_supervisor_tl,
    supervisor* .tl_set:N    = \l_@@_info_supervisor_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/instructors}
% 指导小组成员。
%    \begin{macrocode}
    instructors .clist_set:N = \l_@@_info_instructors_clist,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/department,info/department*}
% 院系。
%    \begin{macrocode}
    department  .tl_set:N    = \l_@@_info_department_tl,
    department* .tl_set:N    = \l_@@_info_department_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/major,info/major*}
% 专业。
%    \begin{macrocode}
    major       .tl_set:N    = \l_@@_info_major_tl,
    major*      .tl_set:N    = \l_@@_info_major_en_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/studentid}
% 学号。
%    \begin{macrocode}
    studentid   .tl_set:N    = \l_@@_info_student_id_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/schoolid}
% 学校代码。
%    \begin{macrocode}
    schoolid    .tl_set:N    = \l_@@_info_school_id_tl,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/keywords,info/keywords*}
% 论文关键字。
%    \begin{macrocode}
    keywords    .clist_set:N = \l_@@_info_keywords_clist,
    keywords*   .clist_set:N = \l_@@_info_keywords_en_clist,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/clc}
% 中国图书馆分类号。
%    \begin{macrocode}
    clc         .tl_set:N    = \l_@@_info_clc_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{密级}
% \changes{v0.3}{2017/07/04}{新增 |secretlevel| 选项。}
% \begin{macro}{\l_@@_secret_bool}
% 是否显示密级。
%    \begin{macrocode}
\bool_new:N \l_@@_secret_bool
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l_@@_info_secret_level_tl}
% 保存当前的密级。
%    \begin{macrocode}
\tl_new:N \l_@@_info_secret_level_tl
%    \end{macrocode}
% \end{macro}
%
% 密级也放在 |fdu/info| 键值类中。
%    \begin{macrocode}
\keys_define:nn { fdu / info }
  {
%    \end{macrocode}
%
% \begin{macro}{info/secretlevel}
% 密级。|none| 表示不涉密，|i|、|ii|、|iii| 分别为秘密、机密、绝密。
% 密级与保密年限中间的五角星符号需要利用 XITS-Math 字体。
%    \begin{macrocode}
    secretlevel .choices:nn  = {
      none, i, ii, iii
    }
    {
      \int_compare:nTF
        { \l_keys_choice_int >= 2 }
        {
          \bool_set_true:N \l_@@_secret_bool
          \setmathfont { XITS~ Math } [ version = secret-XITS ]
          \tl_set:Nn \l_@@_info_secret_level_tl
            {
              \clist_item:Nn \c_@@_def_secret_clist
                { \l_keys_choice_int - 1 }
            }
        }
        { \bool_set_false:N \l_@@_secret_bool }
    },
    secretlevel .value_required:n = true,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{info/secretyear}
% 保密年限。
%    \begin{macrocode}
    secretyear .tl_set:N = \l_@@_info_secret_year_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{定义内部函数}
% \begin{macro}{\fdu_spread_box:Nn,\fdu_spread_box:NV,
%   \fdu_spread_box:Nx}
% 分散对齐的盒子。|#1| = 长度， |#2| = 内容。
%
% 利用 \cs{tl_map_inline:nn} 在字符间插入 \tn{hfil}；
% 紧随其后的 \tn{unskip} 将会去掉最后一个 \tn{hfil}。\\
% 见 http://tex.stackexchange.com/q/169689
%
% |NV| 以及 |Nx| 版本的命令可以避免展开 token list 时出现坏盒子。
%    \begin{macrocode}
\cs_new:Npn \fdu_spread_box:Nn #1 #2
  {
    \makebox [ #1 ] [ s ]
      { \tl_map_inline:nn { #2 } { ##1 \hfil } \unskip }
  }
\cs_generate_variant:Nn \fdu_spread_box:Nn { NV }
\cs_generate_variant:Nn \fdu_spread_box:Nn { Nx }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_center_box:Nn,\fdu_center_box:NV}
% 居中对齐的盒子。|#1| = 长度， |#2| = 内容。
%    \begin{macrocode}
\cs_new:Npn \fdu_center_box:Nn #1 #2
  { \makebox [ #1 ] [ c ] { #2 } }
\cs_generate_variant:Nn \fdu_center_box:Nn { NV }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_fixed_width_box:Nn}
% 限宽盒子。|#1| = 长度， |#2| = 内容。
%    \begin{macrocode}
\cs_new:Npn \fdu_fixed_width_box:Nn #1 #2
  { \parbox { #1 } { #2 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_fixed_width_center_box:Nn,
%   \fdu_fixed_width_center_box:NV}
% 居中对齐的限宽盒子。|#1| = 长度， |#2| = 内容。
%    \begin{macrocode}
\cs_new:Npn \fdu_fixed_width_center_box:Nn #1 #2
  { \fdu_fixed_width_box:Nn { #1 } { \centering #2 } }
\cs_generate_variant:Nn \fdu_fixed_width_center_box:Nn { NV }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_get_text_width:Nn}
% 获取文本宽度，并存入 |dim| 型变量。|#1| = |dim| 型变量，
% |#2| = 内容。
%    \begin{macrocode}
\cs_new:Npn \fdu_get_text_width:Nn #1 #2
  {
    \hbox_set:Nn \l_@@_tmpa_box { #2 }
    \dim_set:Nn #1
      { \box_wd:N \l_@@_tmpa_box }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_get_max_text_width:NN}
% 获取多个文本中的最大宽度，并存入 |dim| 型变量。
% |#1| = |dim| 型变量，|#2| = 文本 |clist|。
%
% 当 \cs{l_@@_tmpa_clist} 非空时，弹出最后一个元素
% 赋给 \cs{l_@@_tmpa_tl}，获取其长度后与 |#1| 进行比较，
% 二者中较大的那一个将成为 |#1| 的新值。
% 不断循环，直至 \cs{l_@@_tmpa_clist} 为空。
%    \begin{macrocode}
\cs_new:Npn \fdu_get_max_text_width:NN #1 #2
  {
    \group_begin:
    \clist_set_eq:NN \l_@@_tmpa_clist #2
    \bool_until_do:nn { \clist_if_empty_p:N \l_@@_tmpa_clist }
      {
        \clist_pop:NN \l_@@_tmpa_clist \l_@@_tmpa_tl
        \fdu_get_text_width:Nn \l_@@_tmpa_dim
          { \large \l_@@_tmpa_tl }
        \dim_gset:Nn #1
          { \dim_max:nn { #1 } { \l_@@_tmpa_dim } }
      }
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_blank_underline:N}
% 下划线占位符。|#1| = 长度。
%    \begin{macrocode}
\cs_new:Npn \fdu_blank_underline:N #1
  { \uline { \hbox_to_wd:nn { #1 } { } } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\fdu_line_spread:N,\fdu_line_spread:n}
% 设置行距。|#1| = 行距倍数。
%    \begin{macrocode}
\cs_new:Npn \fdu_line_spread:N #1
  { \linespread { #1 } \selectfont }
\cs_generate_variant:Nn \fdu_line_spread:N { n }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{封面各部件}
% \begin{macro}{\@@_cover_id:}
% 右上角的学校代码和学号。
%    \begin{macrocode}
\cs_new:Nn \@@_cover_id:
  {
    \begin{flushright}
      \dim_set:Nn \rightskip { \c_@@_def_cover_id_margin_sep_tl }
      \fdu_fixed_width_box:Nn \c_@@_def_cover_id_width_tl
        {
          \@@_cover_font_size_small:
          \bool_if:NT \l_@@_secret_bool
            {
              \group_begin:
                \sffamily \mathversion { secret-XITS }
                \c_@@_def_name_secret_level_tl
                \c_@@_colon_fullwidth_tl
                \l_@@_info_secret_level_tl
                \c_@@_def_name_secret_star_tl
                \l_@@_info_secret_year_tl
              \group_end:
              \par
            }
          \c_@@_def_name_school_id_tl
          \c_@@_colon_fullwidth_tl
          \l_@@_info_school_id_tl
          \par
          \c_@@_def_name_student_id_tl
          \c_@@_colon_fullwidth_tl
          \l_@@_info_student_id_tl
        }
    \end{flushright}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_cover_logo:}
% 插入校名（毛体“復旦大學”）。
%    \begin{macrocode}
\cs_new:Nn \@@_cover_logo:
  {
    \begin{center}
      \includegraphics [
        width = \c_@@_def_cover_logo_width_tl
      ] { \c_@@_def_cover_logo_file_name_tl }
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_cover_title:}
% 标题，共有四行。第一行是论文类型，第二行是学位类型，三、四两行分别
% 是中英文题目。
%    \begin{macrocode}
\cs_new:Nn \@@_cover_title:
  {
    \begin{center}
      {
        \@@_cover_font_size_huge:
        \fdu_spread_box:NV
          \c_@@_def_cover_type_width_tl
          \c_@@_def_name_thesis_type_tl
      }
      \par \vspace { \c_@@_def_cover_v_sep_iii_tl }
      {
        \@@_cover_font_size_normal:
        \c_@@_def_name_degree_type_tl
      }
      \par \vspace { \c_@@_def_cover_v_sep_iv_tl }
      {
        \@@_cover_font_size_large:  \sffamily
        \fdu_fixed_width_center_box:NV
          \c_@@_def_cover_title_width_tl
          \l_@@_info_title_tl
      }
      \par \vspace { \c_@@_def_cover_v_sep_v_tl }
      {
        \@@_cover_font_size_normal: \bfseries
        \fdu_fixed_width_center_box:Nn
          \c_@@_def_cover_title_en_width_tl
          {
            \fdu_line_spread:N
              \c_@@_def_cover_title_en_line_spread_tl
            \l_@@_info_title_en_tl
          }
      }
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_cover_info:}
% 信息栏。
%    \begin{macrocode}
\cs_new:Nn \@@_cover_info:
  {
    \begin{center}
%    \end{macrocode}
%
% 读取左侧名称字段。
%    \begin{macrocode}
      \clist_set:Nn \l_@@_tmpa_clist
        {
          \c_@@_def_name_department_tl,
          \c_@@_def_name_major_tl,
          \c_@@_def_name_author_tl,
          \c_@@_def_name_supervisor_tl,
          \c_@@_def_name_date_tl,
        }
%    \end{macrocode}
%
% 设置信息栏右侧宽度。读取各字段，并将最宽者的宽度赋给
% \cs{l_@@_tmpb_dim}。
%    \begin{macrocode}
      \clist_set:Nn \l_@@_tmpb_clist
        {
          \l_@@_info_department_tl,
          \l_@@_info_major_tl,
          \l_@@_info_author_tl,
          \l_@@_info_supervisor_tl,
          \l_@@_info_date_tl
        }
      \fdu_get_max_text_width:NN
        \l_@@_tmpb_dim \l_@@_tmpb_clist
%    \end{macrocode}
%
% 在 |minipage| 环境中输出各字段。用循环实现。
%    \begin{macrocode}
      \begin{minipage} [ c ] { \textwidth }
        \centering \@@_cover_font_size_normal:
        \bool_until_do:nn
          { \clist_if_empty_p:N \l_@@_tmpa_clist }
          {
            \clist_pop:NN \l_@@_tmpa_clist \l_@@_tmpa_tl
            \clist_pop:NN \l_@@_tmpb_clist \l_@@_tmpb_tl
            \fdu_spread_box:Nx
              \c_@@_def_cover_info_left_width_tl \l_@@_tmpa_tl
            \c_@@_colon_fullwidth_tl
            \fdu_center_box:NV
              \l_@@_tmpb_dim \l_@@_tmpb_tl
            \par \vspace { \c_@@_def_cover_v_sep_vii_tl }
          }
      \end{minipage}
    \end{center}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_decl_text:NNn}
% 构建声明文本。|#1| = 标题，|#2| = 内容，|#3| = 签名行。段前空格
% 需要用 \tn{qquad} 手动生成。
%    \begin{macrocode}
\cs_new:Npn \@@_decl_text:NNn #1 #2 #3
  {
    \begin{center}
%<class-en>      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
      \@@_cover_font_size_large: \sffamily #1
    \end{center}
    \vspace { \c_@@_def_decl_v_sep_iv_tl }
    \begin{center}
      \fdu_fixed_width_box:Nn \textwidth
        {
          \fdu_line_spread:N \c_@@_def_decl_text_line_spread_tl
          \qquad #2
        }
    \end{center}
    \vspace { \c_@@_def_decl_v_sep_iv_tl }
%    \end{macrocode}
%
% \tn{hfill} 用来确保签名行靠右对齐。
%    \begin{macrocode}
    { \hfill #3 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{绘制封面}
% \begin{macro}{\makecoveri}
% 生成封一，即真正的封面。各部件之间用橡皮长度隔开。
%    \begin{macrocode}
\NewDocumentCommand \makecoveri { }
  {
    \group_begin:
%<class-en>      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
      \@@_cover_id:
      \vspace { \c_@@_def_cover_v_sep_i_tl  }
      \@@_cover_logo:
      \vspace { \c_@@_def_cover_v_sep_ii_tl }
      \@@_cover_title:
      \vspace { \c_@@_def_cover_v_sep_vi_tl }
      \@@_cover_info:
      \vspace { \c_@@_def_cover_v_sep_ix_tl }
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\makecoverii}
% 生成封二，即指导小组成员名单。
%    \begin{macrocode}
\NewDocumentCommand \makecoverii { }
  {
    \group_begin:
%    \end{macrocode}
%
% 临时禁用 \tn{cleardoublepage} 带来的分页。
%    \begin{macrocode}
      \cs_set_eq:NN \cleardoublepage \relax
      \thispagestyle { empty }
%    \end{macrocode}
%
% 保持英文模板与中文模板的一致。
%    \begin{macrocode}
%<*class-en>
      \keys_set:nn { ctex }
        { chapter / titleformat = \c_@@_def_chapter_format_tl }
      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
%</class-en>
%    \end{macrocode}
%
% 为了关闭页眉页脚，此处使用了不编号章节的原始命令 \tn{@schapter}。
%    \begin{macrocode}
      \@schapter
        {
          \fdu_spread_box:NV
            \c_@@_def_cover_instructors_width_tl
            \c_@@_def_name_instructors_tl
        }
      \begin{center}
        \large
        \clist_use:Nn \l_@@_info_instructors_clist { \par }
      \end{center}
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.3}{2017/07/05}{新增声明页。}
%
% \begin{macro}{\makecoveriii}
% 生成封三，即声明页。该页也需要关闭页眉、页脚显示。
%    \begin{macrocode}
\NewDocumentCommand \makecoveriii { }
  {
    \cleardoublepage
    \thispagestyle { empty }
    \vspace* { \c_@@_def_decl_v_sep_i_tl }
%    \end{macrocode}
%
% 独创性声明。
%    \begin{macrocode}
    \@@_decl_text:NNn
      \c_@@_def_name_originality_decl_tl
      \c_@@_def_originality_decl_text_tl
      {
        \c_@@_def_name_author_sign_tl
        \c_@@_colon_fullwidth_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \quad
        \c_@@_def_name_sign_date_tl
        \c_@@_colon_fullwidth_tl
        \fdu_blank_underline:N \c_@@_def_decl_date_width_tl
      }
    \vspace { \c_@@_def_decl_v_sep_ii_tl }
%    \end{macrocode}
%
% 使用授权声明。
%    \begin{macrocode}
    \@@_decl_text:NNn
      \c_@@_def_name_authorization_decl_tl
      \c_@@_def_authorization_decl_text_tl
      {
        \c_@@_def_name_author_sign_tl
        \c_@@_colon_fullwidth_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \quad
        \c_@@_def_name_supervisor_sign_tl
        \c_@@_colon_fullwidth_tl
        \fdu_blank_underline:N \c_@@_def_decl_sign_width_tl
        \quad
        \c_@@_def_name_sign_date_tl
        \c_@@_colon_fullwidth_tl
        \fdu_blank_underline:N \c_@@_def_decl_date_width_tl
      }
    \vspace { \c_@@_def_decl_v_sep_iii_tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\l_@@_auto_make_cover_bool,style/automakecover}
% 是否自动生成封面。
%    \begin{macrocode}
\bool_new:N \l_@@_auto_make_cover_bool
\keys_define:nn { fdu / style }
  {
    automakecover .bool_set:N = \l_@@_auto_make_cover_bool,
    automakecover .default:n  = true
  }
%    \end{macrocode}
% \end{macro}
%
% 在 |document| 开始位置添加封面以及指导小组成员名单。
%    \begin{macrocode}
\AtBeginDocument
  {
    \bool_if:NT \l_@@_auto_make_cover_bool
      {
        \begin{titlepage}
          \makecoveri \newpage \makecoverii
        \end{titlepage}
      }
  }
%    \end{macrocode}
%
% 在 |document| 结束位置添加声明页。
%    \begin{macrocode}
\AtEndDocument
  { \bool_if:NT \l_@@_auto_make_cover_bool { \makecoveriii } }
%    \end{macrocode}
%
% \subsection{目录}
% 设置目录标题。
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
%<class>    contentsname = { \c_@@_def_name_toc_tl },
%<class-en>    contentsname = { \c_@@_def_name_toc_en_tl },
%    \end{macrocode}
%
% 设置目录中章节标题的样式。
%    \begin{macrocode}
    chapter    / tocline = {
%<class>      \c_@@_def_chapter_toc_format_tl    \CTEXnumberline { #1 } #2
%<class-en>      \c_@@_def_chapter_toc_format_en_tl \CTEXnumberline { #1 } #2
    },
    section    / tocline = {
%<class>      \c_@@_def_section_toc_format_tl    \CTEXnumberline { #1 } #2
%<class-en>      \c_@@_def_section_toc_format_en_tl \CTEXnumberline { #1 } #2
    },
    subsection / tocline = {
%<class>      \c_@@_def_subsection_toc_format_tl \CTEXnumberline { #1 } #2
%<class-en>      \c_@@_def_subsection_toc_format_en_tl
%<class-en>        \CTEXnumberline { #1 } #2
    }
  }
%    \end{macrocode}
%
% \begin{macro}{\tableofcontents}
% 修改 \tn{tableofcontents} 的定义，使得页眉正确显示。第二个参数中的
% 代码来源于 \LaTeXe{} 标准文档类 \file{book.cls}。
%    \begin{macrocode}
\ctex_patch_cmd_once:NnnnTF \tableofcontents
  { }
  {
    \chapter*{\contentsname
      \@mkboth{%
        \MakeUppercase\contentsname}{\MakeUppercase\contentsname}}%
  }
  {
    \chapter* { \contentsname }
%<class>    \fdu_front_matter_header:n { \c_@@_def_name_toc_tl }
%<class-en>    \fdu_front_matter_header:n { \c_@@_def_name_toc_en_tl }
  }
  { } { \ctex_patch_failure:N \tableofcontents }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@starttoc}
% 修改 \tn{@starttoc} 的定义以调整英文模板中的目录行距。
%    \begin{macrocode}
%<*class-en>
\ctex_patch_cmd_once:NnnnTF \@starttoc
  { }
  { \begingroup }
  {
    \begingroup
      \fdu_line_spread:n { \fp_use:N \c_@@_def_line_spread_fp }
  }
  { } { \ctex_patch_failure:N \@starttoc }
%</class-en>
%    \end{macrocode}
% \end{macro}
%
% \subsection{摘要}
% \subsubsection{中文摘要}
% \begin{macro}{abstract}
% 中文摘要及关键字。
%    \begin{macrocode}
%<*class>
\NewDocumentEnvironment { abstract } { }
  {
%    \end{macrocode}
%
% 中文摘要标题为“摘 \quad 要”，需要修改页眉，并添加到目录。
%    \begin{macrocode}
    \chapter* { \c_@@_def_name_abstract_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_abstract_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_tl
        \c_@@_def_name_abstract_tl
      }
  }
  {
%    \end{macrocode}
%
% 摘要正文完成后，空行，输出关键字列表，之间用分号隔开。
%    \begin{macrocode}
    \par \mbox{} \par
    \noindent \hangindent = 4 em  \hangafter = 1
    {
      \normalfont \sffamily
      \c_@@_def_name_keywords_tl \c_@@_colon_fullwidth_tl
    }
    \clist_use:Nn \l_@@_info_keywords_clist
      { \c_@@_semicolon_fullwidth_tl }
    \par
%    \end{macrocode}
%
% 下一行输出中图分类号（CLC）。
%    \begin{macrocode}
    \noindent
    {
      \normalfont \sffamily
      \c_@@_def_name_clc_tl \c_@@_colon_fullwidth_tl
    }
    \l_@@_info_clc_tl
  }
%</class>
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{英文摘要}
% \begin{macro}{abstract*,abstract}
% 英文摘要及关键字。注意英文模板中的 |abstract| 环境与中文模板中的
% |abstract*| 环境是相同的，后者在英文模板中没有定义。
%    \begin{macrocode}
%<class>\NewDocumentEnvironment { abstract* } { }
%<class-en>\NewDocumentEnvironment { abstract } { }
  {
%    \end{macrocode}
%
% 英文摘要标题为“Abstract”，也要修改页眉并添加到目录。
%    \begin{macrocode}
    \chapter* { \c_@@_def_name_abstract_en_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_abstract_en_tl }
    \addcontentsline { toc } { chapter }
      {
%<class>        \c_@@_def_chapter_toc_format_tl
%<class-en>        \c_@@_def_chapter_toc_format_en_tl
        \c_@@_def_name_abstract_en_tl
      }
  }
  {
%    \end{macrocode}
%
% 空行，输出关键字，之间为全角空格。
%    \begin{macrocode}
    \par \mbox{} \par
    \noindent \hangindent = 4 em \hangafter = 1
    \textbf{\c_@@_def_name_keywords_en_tl} \quad
    \clist_use:Nn \l_@@_info_keywords_en_clist { \quad }
    \par
%    \end{macrocode}
%
% 下一行输出中图分类号（CLC）。
%    \begin{macrocode}
    \noindent
    \textbf{\c_@@_def_name_clc_en_tl} \quad
    \l_@@_info_clc_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{符号表}
% \begin{macro}{notation}
% 符号表环境，利用 |longtable| 封装。可选参数为表格列格式说明符。
% 与摘要类似，符号表页需要修改页眉，并添加到目录。另外需要调整
% \cs{LTpre} 和 \cs{LTpost}，以删去 |longtable| 前后的空白。
%    \begin{macrocode}
\NewDocumentEnvironment { notation }
  { O { \c_@@_def_notation_arg_tl } }
  {
%<*class>
    \chapter* { \c_@@_def_name_notation_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_notation_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_tl
        \c_@@_def_name_notation_tl
      }
    \group_begin:
%</class>
%<*class-en>
    \chapter* { \c_@@_def_name_notation_en_tl }
    \fdu_front_matter_header:n { \c_@@_def_name_notation_en_tl }
    \addcontentsline { toc } { chapter }
      {
        \c_@@_def_chapter_toc_format_en_tl
        \c_@@_def_name_notation_en_tl
      }
    \group_begin:
      \cs_set_eq:NN \arraystretch
        \c_@@_def_notation_line_stretch_en_tl
%</class-en>
      \dim_set_eq:NN \LTpre  \c_zero_dim
      \dim_set_eq:NN \LTpost \c_zero_dim
      \begin{longtable} { #1 }
  }
  {
      \end{longtable}
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{文字绕排}
% \changes{v0.3}{2017/02/26}{尝试利用 \pkg{l3galley} 进行文字绕排。}
% WARNING：严重冲突，暂时不启用。
%    \begin{macrocode}
% \RequirePackage{xgalley}
%
%
% \box_new:N \l_@@_tmpb_box
%
% \dim_new:N \l_@@_wrap_width_dim
% \dim_new:N \l_@@_wrap_height_dim
%
% \clist_new:N \l_@@_wrap_indent_clist
%
% \int_new:N \l_@@_tmpa_int
% \int_new:N \l_@@_wrap_lines_int
%
% \fp_new:N \l_@@_tmpa_fp
%
%
% \keys_define:nn { xwrapfig }
% {
%   cutout .code:n = {
%     \keys_set:nn { xwrapfig / cutout } { #1 }
%   }
% }
%
% \keys_define:nn { fdu / wrap / cutout }
% {
%   % 环境前不改变的行数
%   top~ lines    .int_set:N = \l_@@_wrap_top_lines_int,
%   % 左右边距
%   left~  margin .dim_set:N = \l_@@_wrap_L_margin_dim,
%   right~ margin .dim_set:N = \l_@@_wrap_R_margin_dim,
%   % 上下行距
%   before~ lines .int_set:N = \l_@@_wrap_before_lines_int,
%   after~  lines .int_set:N = \l_@@_wrap_after_lines_int,
%   %
%   top~ lines    .initial:n = { 2 },
%   left~  margin .initial:n = { 0.5 em },
%   right~ margin .initial:n = { 0.5 em },
%   before~ lines .initial:n = { 1 },
%   after~  lines .initial:n = { 1 }
% }
%
%
% \cs_generate_variant:Nn \galley_cutout_right:nn { nV }
% \cs_generate_variant:Nn \galley_cutout_left:nn  { nV }
%
%
% % 预先准备
% % 参数：内容
% \cs_new_protected:Nn \fdu_wrap_prewrap:n
% {
%   % 清除列表，初始化
%   \clist_clear:N \l_@@_wrap_indent_clist
%
%   % 装到 hbox
%   \hbox_set:Nn \l_@@_tmpa_box { #1 }
%   % 总宽度 = 盒子宽 + 调整距离
%   \dim_set:Nn \l_@@_wrap_width_dim
%     { \box_wd:N \l_@@_tmpa_box }
%   \dim_add:Nn \l_@@_wrap_width_dim
%     { \l_@@_wrap_L_margin_dim + \l_@@_wrap_R_margin_dim }
%
%   % 内容装到 vbox
%   \vbox_set:Nn \l_@@_tmpb_box { #1 }
%   % 总高度 = 盒子高 + 盒子深
%   \dim_set:Nn \l_@@_wrap_height_dim
%     { \box_ht:N \l_@@_tmpb_box + \box_dp:N \l_@@_tmpb_box }
%   % 总占据行数 = 总高度 / 行距 + 调整行数
%   \int_set:Nn \l_@@_wrap_lines_int
%     {
%       ( \l_@@_wrap_height_dim / \baselineskip )
%       + \l_@@_wrap_before_lines_int
%       + \l_@@_wrap_after_lines_int
%     }
%
%   % 循环：构建 clist，共 {行数} 个元素，每个元素均为 {总宽度}
%   \int_zero:N \l_@@_tmpa_int
%   \int_do_while:nn
%     { \l_@@_tmpa_int < \l_@@_wrap_lines_int }
%     {
%       \int_incr:N \l_@@_tmpa_int
%       \clist_put_right:Nn \l_@@_wrap_indent_clist
%         { \l_@@_wrap_width_dim }
%     }
% }
%
% % 右边插入内容
% % 参数1：不动的行数，参数2：内容
% \cs_new_protected:Nn \fdu_wrap_put_right:nn
% {
%   \fdu_wrap_prewrap:n { #2 }
%
%   % 开窗
%   \galley_cutout_right:nV { #1 } \l_@@_wrap_indent_clist
%
%   % 内容存入盒子
%   \vbox_set:Nn \l_@@_tmpa_box
%     {
%       % 垂直移动距离 = （不动的行数 + 0.5 * 调整行数） * 行距
%       \fp_set:Nn \l_@@_tmpa_fp
%         {
%           ( #1 + \l_@@_wrap_before_lines_int )
%           * \baselineskip
%         }
%       \skip_vertical:n  { \fp_to_dim:N \l_@@_tmpa_fp }
%
%       % 插入盒子
%       % 宽度：行宽
%       % 内容：跳一个距离（行宽 - 内容总宽 + 左调整宽度）
%       %      内容
%       %      再跳一个距离（右调整宽度）
%       \hbox_to_wd:nn { \linewidth }
%         {
%           \skip_horizontal:n
%             {
%               \linewidth
%               - \l_@@_wrap_width_dim
%               + \l_@@_wrap_L_margin_dim
%             }
%           #2
%           % \skip_horizontal:n { \l_@@_wrap_R_margin_dim }
%         }
%     }
%
%   \box_set_ht:Nn \l_@@_tmpa_box { 0pt }
%   \box_set_dp:Nn \l_@@_tmpa_box { 0pt }
%   \skip_vertical:n { -\baselineskip }
%   \box_use:N \l_@@_tmpa_box
% }
%
% % 左边插入内容
% % 参数1：不动的行数，参数2：内容
% \cs_new_protected:Nn \fdu_wrap_put_left:nn
% {
%   \fdu_wrap_prewrap:n { #2 }
%
%   % 开窗
%   \galley_cutout_left:nV { #1 } \l_@@_wrap_indent_clist
%
%   % 内容存入盒子
%   \vbox_set:Nn \l_@@_tmpa_box
%     {
%       % 垂直移动距离 = （不动的行数 + 0.5 * 调整行数） * 行距
%       \fp_set:Nn \l_@@_tmpa_fp
%         { ( #1 + \l_@@_wrap_before_lines_int ) * \baselineskip }
%       \skip_vertical:n  { \fp_to_dim:N \l_@@_tmpa_fp }
%
%       % 插入盒子
%       % 宽度：行宽
%       % 内容：跳一个距离（左调整宽度）
%       %      内容
%       \hbox_to_wd:nn { \linewidth }
%         {
%           \skip_horizontal:n {  \l_@@_wrap_L_margin_dim }
%           #2
%         }
%     }
%
%   \box_set_ht:Nn \l_@@_tmpa_box { 0pt }
%   \box_set_dp:Nn \l_@@_tmpa_box { 0pt }
%   \skip_vertical:n { -\baselineskip }
%   \box_use:N \l_@@_tmpa_box
% }
%
% \cs_generate_variant:Nn \fdu_wrap_put_right:nn { Vn }
% \cs_generate_variant:Nn \fdu_wrap_put_left:nn { Vn }
%
%
% % 参数1：选项，参数2：内容
% \NewDocumentCommand\putright { O { } +m }
% {
%   \keys_set:nn { fdu / wrap / cutout } { #1 }
%   \fdu_wrap_put_right:Vn \l_@@_wrap_top_lines_int { #2 }
% }
% \NewDocumentCommand\putleft { O { } +m }
% {
%   \keys_set:nn { fdu / wrap / cutout } { #1 }
%   \fdu_wrap_put_left:Vn \l_@@_wrap_top_lines_int { #2 }
% }
%
%
% \NewDocumentCommand\resetindents { }
% {
%   \galley_parshape_set_multi:nnnN
%     { 0 } { 0pt } { 0pt } \c_true_bool
% }
%    \end{macrocode}
%
% \subsection{用户接口}
% \begin{macro}{info,style}
% 定义元（meta）键值对。
%    \begin{macrocode}
\keys_define:nn { fdu }
  {
    info  .meta:nn = { fdu / info  } { #1 },
    style .meta:nn = { fdu / style } { #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% 文档类初始设置。
%    \begin{macrocode}
\keys_set:nn { fdu }
  {
    style   / fontsize      =  -4,
%<class>    style   / fullwidthstop =  false,
    style   / automakecover =  true,
    info    / secretlevel   =  none,
    info    / date          =  \zhtoday,
    info    / schoolid      =  10246,
%<class>    theorem / headerfont    = { \sffamily },
%<class-en>    theorem / headerfont    = { \bfseries \upshape },
%<class>    theorem / bodyfont      = { \fdu@kai },
%<class-en>    theorem / bodyfont      = { \itshape },
    theorem / counter       = { chapter }
  }
%    \end{macrocode}
%
% 在 |nofonts=false| 的情况下设置默认字体。
%    \begin{macrocode}
\bool_if:NF \g_@@_no_fonts_bool
%<*class>
  {
    \keys_set:nn { fdu }
      {
        style / font    = times,
        style / cjkfont = fandol
      }
  }
%</class>
%<class-en>  { \keys_set:nn { fdu } { style / font = times } }
%    \end{macrocode}
%
% \begin{macro}{\fdusetup}
% 用户设置接口。
%    \begin{macrocode}
\NewDocumentCommand \fdusetup { m }
  { \keys_set:nn { fdu } { #1 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{proof,
%   axiom,corollary,definition,example,lemma,theorem}
% 模板预定义的常用数学环境。
% 其中的“证明”比较特殊，它不编号，但会添加证毕符号。
%    \begin{macrocode}
%<*class>
\fdunewtheorem* { proof       } { \c_@@_def_name_proof_tl      }
\fdunewtheorem  { axiom       } { \c_@@_def_name_axiom_tl      }
\fdunewtheorem  { corollary   } { \c_@@_def_name_corollary_tl  }
\fdunewtheorem  { definition  } { \c_@@_def_name_definition_tl }
\fdunewtheorem  { example     } { \c_@@_def_name_example_tl    }
\fdunewtheorem  { lemma       } { \c_@@_def_name_lemma_tl      }
\fdunewtheorem  { theorem     } { \c_@@_def_name_theorem_tl    }
%</class>
%<*class-en>
\fdunewtheorem* { proof       } { \c_@@_def_name_proof_en_tl      }
\fdunewtheorem  { axiom       } { \c_@@_def_name_axiom_en_tl      }
\fdunewtheorem  { corollary   } { \c_@@_def_name_corollary_en_tl  }
\fdunewtheorem  { definition  } { \c_@@_def_name_definition_en_tl }
\fdunewtheorem  { example     } { \c_@@_def_name_example_en_tl    }
\fdunewtheorem  { lemma       } { \c_@@_def_name_lemma_en_tl      }
\fdunewtheorem  { theorem     } { \c_@@_def_name_theorem_en_tl    }
%</class-en>
%</class|class-en>
%    \end{macrocode}
% \end{macro}
%
% \subsection{模板参数配置文件}
% \changes{v0.3}{2017/06/27}{分离文档类与参数配置文件。}
%    \begin{macrocode}
%<*definition>
%    \end{macrocode}
%
% \subsubsection{通用配置}
% \begin{macro}{\c_@@_full_stop_ideographic_tl,
%   \c_@@_full_stop_fullwidth_tl,
%   \c_@@_colon_fullwidth_tl,
%   \c_@@_semicolon_fullwidth_tl}
% 一些标点符号：
% U+3002 是圆圈句号“\symbol{"3002}”（ideographic full stop），
% U+FF0E 是全角实心句点“\symbol{"FF0E}”（fullwidth full stop），
% U+FF1A 是全角冒号“\symbol{"FF1A}”（fullwidth colon），
% U+FF1B 是全角分号“\symbol{"FF1B}”（fullwidth semicolon）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_full_stop_ideographic_tl { \symbol { "3002 } }
\tl_const:Nn \c_@@_full_stop_fullwidth_tl   { \symbol { "FF0E } }
\tl_const:Nn \c_@@_colon_fullwidth_tl       { \symbol { "FF1A } }
\tl_const:Nn \c_@@_semicolon_fullwidth_tl   { \symbol { "FF1B } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_paper_size_tl}
% 纸张大小（A4）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_paper_size_tl { a4paper }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_page_margin_top_dim,
%   \c_@@_def_page_margin_bottom_dim,
%   \c_@@_def_page_margin_left_dim,
%   \c_@@_def_page_margin_right_dim}
% 页面边距。这里，$\SI{2.54}{\centi\meter}=\SI{1}{in}$，
% $\SI{3.18}{\centi\meter}=\SI{1.25}{in}$。
%    \begin{macrocode}
\dim_const:Nn \c_@@_def_page_margin_top_dim    { 2.54 cm }
\dim_const:Nn \c_@@_def_page_margin_bottom_dim { 2.54 cm }
\dim_const:Nn \c_@@_def_page_margin_left_dim   { 3.18 cm }
\dim_const:Nn \c_@@_def_page_margin_right_dim  { 3.18 cm }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_header_height_dim}
% 页眉高度。此高度与五号字大致相配。
%    \begin{macrocode}
\dim_const:Nn \c_@@_def_header_height_dim { 15 pt }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_font_size_tl}
% 字号（小四）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_font_size_tl { -4 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_line_spread_fp}
% 行距倍数。行距倍数 $k$ 由下式确定：
% \begin{equation*}
%   \num{1.2} \times k \times \SI{12}{bp} = \SI{20}{pt}。
% \end{equation*}
% 式中，\num{1.2} 是基本行距与文字大小之比，\SI{12}{bp} 是小四号字
% 的大小，\SI{20}{pt} 是行距固定值。
%    \begin{macrocode}
\fp_const:Nn \c_@@_def_line_spread_fp
  { ( 20 pt ) / ( 12 bp ) / 1.2 }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{章节标题}
% \begin{macro}{\c_@@_def_chapter_format_tl,
%   \c_@@_def_section_format_tl,
%   \c_@@_def_subsection_format_tl}
% 中文模板章节标题样式。均使用黑体。章标题居中，节与小节标题左对齐
% （但需要使用 \tn{raggedright}）。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_format_tl
  { \huge  \normalfont \sffamily \centering   }
\tl_const:Nn \c_@@_def_section_format_tl
  { \Large \normalfont \sffamily \raggedright }
\tl_const:Nn \c_@@_def_subsection_format_tl
  { \large \normalfont \sffamily \raggedright }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_chapter_format_en_tl,
%   \c_@@_def_chapter_name_format_en_tl,
%   \c_@@_def_chapter_title_format_en_tl,
%   \c_@@_def_chapter_after_name_en_tl,
%   \c_@@_def_section_format_en_tl,
%   \c_@@_def_subsection_format_en_tl}
% 英文模板章节标题样式。均使用粗体。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_format_en_tl { \centering }
\tl_const:Nn \c_@@_def_chapter_name_format_en_tl
  { \LARGE \bfseries }
\tl_const:Nn \c_@@_def_chapter_title_format_en_tl
  { \huge  \bfseries }
\tl_const:Nn \c_@@_def_chapter_after_name_en_tl
  { \par \nobreak \vskip 10 pt }
\tl_const:Nn \c_@@_def_section_format_en_tl
  { \Large \bfseries \raggedright }
\tl_const:Nn \c_@@_def_subsection_format_en_tl
  { \large \bfseries \raggedright }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_chapter_before_sep_tl,
%   \c_@@_def_chapter_after_sep_tl,
%   \c_@@_def_section_before_sep_tl,
%   \c_@@_def_section_after_sep_tl,
%   \c_@@_def_subsection_before_sep_tl,
%   \c_@@_def_subsection_after_sep_tl}
% 章节标题前后间距。使用 |tl| 而非 |skip|，是为了防止在没有上下文的
% 时候 |ex| 被展开成 0。之后的不少间距也是这样定义的。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_before_sep_tl { 50 pt }
\tl_const:Nn \c_@@_def_chapter_after_sep_tl  { 40 pt }
\tl_const:Nn \c_@@_def_section_before_sep_tl
  { 3.5  ex plus 1   ex minus 0.2 ex }
\tl_const:Nn \c_@@_def_section_after_sep_tl
  { 2.7  ex plus 0.5 ex }
\tl_const:Nn \c_@@_def_subsection_before_sep_tl
  { 3.25 ex plus 1   ex minus 0.2 ex }
\tl_const:Nn \c_@@_def_subsection_after_sep_tl
  { 2.5  ex plus 0.3 ex }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_chapter_toc_format_tl,
%   \c_@@_def_section_toc_format_tl,
%   \c_@@_def_subsection_toc_format_tl,
%   \c_@@_def_chapter_toc_format_en_tl,
%   \c_@@_def_section_toc_format_en_tl,
%   \c_@@_def_subsection_toc_format_en_tl}
% 章节目录在目录中的样式。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_chapter_toc_format_tl
  { \normalfont \sffamily }
\tl_const:Nn \c_@@_def_section_toc_format_tl
  { }
\tl_const:Nn \c_@@_def_subsection_toc_format_tl    { \fdu@kai  }
\tl_const:Nn \c_@@_def_chapter_toc_format_en_tl    { \bfseries }
\tl_const:Nn \c_@@_def_section_toc_format_en_tl    { \bfseries }
\tl_const:Nn \c_@@_def_subsection_toc_format_en_tl { }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{封面}
% \begin{macro}{\@@_cover_font_size_small:,
%   \@@_cover_font_size_normal:,
%   \@@_cover_font_size_large:,
%   \@@_cover_font_size_huge:}
% 字号，使用固定值。这里的定义与正文字号有所不同。
%    \begin{macrocode}
\cs_new:Nn \@@_cover_font_size_small:  { \zihao { -5 } }
\cs_new:Nn \@@_cover_font_size_normal: { \zihao {  4 } }
\cs_new:Nn \@@_cover_font_size_large:  { \zihao { -2 } }
\cs_new:Nn \@@_cover_font_size_huge:   { \zihao {  2 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_cover_id_width_tl,
%   \c_@@_def_cover_id_margin_sep_tl,
%   \c_@@_def_cover_logo_width_tl,
%   \c_@@_def_cover_type_width_tl,
%   \c_@@_def_cover_title_width_tl,
%   \c_@@_def_cover_title_en_width_tl,
%   \c_@@_def_cover_info_left_width_tl,
%   \c_@@_def_cover_instructors_width_tl}
% 封面中的一些长度。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_id_width_tl          { 10 em }
\tl_const:Nn \c_@@_def_cover_id_margin_sep_tl     { -2 em }
\tl_const:Nn \c_@@_def_cover_logo_width_tl
  { 0.5  \textwidth }
\tl_const:Nn \c_@@_def_cover_type_width_tl
  { 0.45 \textwidth }
\tl_const:Nn \c_@@_def_cover_title_width_tl
  { 0.9  \textwidth }
\tl_const:Nn \c_@@_def_cover_title_en_width_tl
  { 0.9  \textwidth }
\tl_const:Nn \c_@@_def_cover_info_left_width_tl   { 6 em }
\tl_const:Nn \c_@@_def_cover_instructors_width_tl { 7 em }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_cover_v_sep_i_tl,
%   \c_@@_def_cover_v_sep_ii_tl,
%   \c_@@_def_cover_v_sep_iii_tl,
%   \c_@@_def_cover_v_sep_iv_tl,
%   \c_@@_def_cover_v_sep_v_tl,
%   \c_@@_def_cover_v_sep_vi_tl,
%   \c_@@_def_cover_v_sep_vii_tl,
%   \c_@@_def_cover_v_sep_ix_tl}
% 封面中的一些垂直间距，按自上而下的顺序排列。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_v_sep_i_tl   { \stretch { 1.5 } }
\tl_const:Nn \c_@@_def_cover_v_sep_ii_tl  { \stretch { 0.8 } }
\tl_const:Nn \c_@@_def_cover_v_sep_iii_tl { 0.4 cm }
\tl_const:Nn \c_@@_def_cover_v_sep_iv_tl  { \stretch { 2   } }
\tl_const:Nn \c_@@_def_cover_v_sep_v_tl   { 0.8 cm }
\tl_const:Nn \c_@@_def_cover_v_sep_vi_tl  { \stretch { 2.5 } }
\tl_const:Nn \c_@@_def_cover_v_sep_vii_tl { 1 ex }
\tl_const:Nn \c_@@_def_cover_v_sep_ix_tl  { \stretch { 1.5 } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_cover_logo_file_name_tl}
% 校名 logo 文件名。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_logo_file_name_tl { Fudan_Logo.pdf }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_cover_title_en_line_spread_tl}
% 英文标题的行距倍数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_cover_title_en_line_spread_tl { 1.2 }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{声明页}
% \begin{macro}{\c_@@_def_decl_v_sep_i_tl,
%   \c_@@_def_decl_v_sep_ii_tl,
%   \c_@@_def_decl_v_sep_iii_tl,
%   \c_@@_def_decl_v_sep_iv_tl}
% 声明页中的一些垂直间距，按自上而下的顺序排列。最后一项是标题与
% 文本、文本与签名行的间距。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_v_sep_i_tl   { \stretch { 0.2 } }
\tl_const:Nn \c_@@_def_decl_v_sep_ii_tl  { \stretch { 2.5 } }
\tl_const:Nn \c_@@_def_decl_v_sep_iii_tl { \stretch { 2.5 } }
\tl_const:Nn \c_@@_def_decl_v_sep_iv_tl  { 0.8 cm }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_decl_text_line_spread_tl}
% 声明文本的行距倍数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_text_line_spread_tl { 1.8 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_decl_sign_width_tl,
%   \c_@@_def_decl_date_width_tl}
% 签名栏和日期栏的宽度。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_decl_sign_width_tl { 6 em }
\tl_const:Nn \c_@@_def_decl_date_width_tl { 5 em }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_originality_decl_text_tl}
% 论文独创性声明。
% ^^A 这里切换一下句号的类别码，以使代码中显示为圆圈句号。
% ^^A 这不会影响最终论文输出（最终将始终输出圆圈句号）。
% \catcode`\。=12
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_originality_decl_text_tl
  {
    本人郑重声明：所呈交的学位论文，是本人在导师的指导下，独立进行研
    究工作所取得的成果。论文中除特别标注的内容外，不包含任何其他个人
    或机构已经发表或撰写过的研究成果。对本研究做出重要贡献的个人和集
    体，均已在论文中作了明确的声明并表示了谢意。本声明的法律结果由本
    人承担。
  }
%    \end{macrocode}
% \catcode`\。 = \active
% \newcommand{。}{．}
% \end{macro}
%
% \begin{macro}{\c_@@_def_authorization_decl_text_tl}
% 论文使用授权声明。
% \catcode`\。=12
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_authorization_decl_text_tl
  {
    本人完全了解复旦大学有关收藏和利用博士、硕士学位论文的规定，即：
    学校有权收藏、使用并向国家有关部门或机构送交论文的印刷本和电子版
    本；允许论文被查阅和借阅；学校可以公布论文的全部或部分内容，可以
    采用影印、缩印或其它复制手段保存论文。涉密学位论文在解密后遵守此
    规定。
  }
%    \end{macrocode}
% \catcode`\。 = \active
% \newcommand{。}{．}
% \end{macro}
%
% \subsubsection{杂项}
% \begin{macro}{\c_@@_def_secret_clist}
% 三种密级。
%    \begin{macrocode}
\clist_const:Nn \c_@@_def_secret_clist { 秘密, 机密, 绝密 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_notation_arg_tl}
% 符号表默认参数。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_notation_arg_tl { l p { 7.5 cm } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\c_@@_def_notation_line_stretch_en_tl}
% 英文模板中符号表的行间距。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_notation_line_stretch_en_tl { 1.3 }
%    \end{macrocode}
% \end{macro}
%
% 默认名称。注意空格是忽略掉的。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_name_secret_level_tl     { 密 \qquad 级 }
\tl_const:Nn \c_@@_def_name_secret_star_tl      { $ \bigstar $ }
\tl_const:Nn \c_@@_def_name_school_id_tl        { 学校代码     }
\tl_const:Nn \c_@@_def_name_student_id_tl       { 学 \qquad 号 }
\tl_const:Nn \c_@@_def_name_thesis_type_tl      { 博士学位论文 }
\tl_const:Nn \c_@@_def_name_degree_type_tl      { （学术学位） }
\tl_const:Nn \c_@@_def_name_department_tl       { 院系         }
\tl_const:Nn \c_@@_def_name_major_tl            { 专业         }
\tl_const:Nn \c_@@_def_name_author_tl           { 姓名         }
\tl_const:Nn \c_@@_def_name_supervisor_tl       { 指导教师     }
\tl_const:Nn \c_@@_def_name_date_tl             { 完成日期     }
\tl_const:Nn \c_@@_def_name_instructors_tl      { 指导小组成员 }
\tl_const:Nn \c_@@_def_name_toc_tl              { 目 \quad 录  }
\tl_const:Nn \c_@@_def_name_abstract_tl         { 摘 \quad 要  }
\tl_const:Nn \c_@@_def_name_keywords_tl         { 关键字       }
\tl_const:Nn \c_@@_def_name_clc_tl              { 中图分类号   }
\tl_const:Nn \c_@@_def_name_notation_tl         { 符号表       }
\tl_const:Nn \c_@@_def_name_toc_en_tl           { Contents     }
\tl_const:Nn \c_@@_def_name_abstract_en_tl      { Abstract     }
\tl_const:Nn \c_@@_def_name_keywords_en_tl      { Keywords:    }
\tl_const:Nn \c_@@_def_name_clc_en_tl           { CLC~ number: }
\tl_const:Nn \c_@@_def_name_notation_en_tl
  { List~ of~ Symbols }
\tl_const:Nn \c_@@_def_name_originality_decl_tl
  { 复旦大学 \\ 学位论文独创性声明   }
\tl_const:Nn \c_@@_def_name_authorization_decl_tl
  { 复旦大学 \\ 学位论文使用授权声明 }
\tl_const:Nn \c_@@_def_name_author_sign_tl      { 作者签名     }
\tl_const:Nn \c_@@_def_name_supervisor_sign_tl  { 导师签名     }
\tl_const:Nn \c_@@_def_name_sign_date_tl        { 日期         }
%    \end{macrocode}
%
% 默认定理头名称。
%    \begin{macrocode}
\tl_const:Nn \c_@@_def_name_proof_tl         { 证明 }
\tl_const:Nn \c_@@_def_name_axiom_tl         { 公理 }
\tl_const:Nn \c_@@_def_name_corollary_tl     { 推论 }
\tl_const:Nn \c_@@_def_name_definition_tl    { 定义 }
\tl_const:Nn \c_@@_def_name_example_tl       { 例   }
\tl_const:Nn \c_@@_def_name_lemma_tl         { 引理 }
\tl_const:Nn \c_@@_def_name_theorem_tl       { 定理 }
\tl_const:Nn \c_@@_def_name_proof_en_tl      { Proof      }
\tl_const:Nn \c_@@_def_name_axiom_en_tl      { Axiom      }
\tl_const:Nn \c_@@_def_name_corollary_en_tl  { Corollary  }
\tl_const:Nn \c_@@_def_name_definition_en_tl { Definition }
\tl_const:Nn \c_@@_def_name_example_en_tl    { Example    }
\tl_const:Nn \c_@@_def_name_lemma_en_tl      { Lemma      }
\tl_const:Nn \c_@@_def_name_theorem_en_tl    { Theorem    }
%</definition>
%    \end{macrocode}
%
% \subsection{用户配置文件}
% 以下是一个示例：修改论文类型为“硕士学位论文”。
%    \begin{macrocode}
%<*user>
%%
%% \tl_set:Nn \c__fdu_def_name_thesis_type_tl { 硕士学位论文 }
%</user>
%    \end{macrocode}
%
% \end{implementation}
%
% \Finale
